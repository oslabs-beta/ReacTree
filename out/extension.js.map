{"version":3,"file":"extension.js","mappings":"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,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,GAAI,GAAI,KAAM,GAAI,EAAG,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,MAAO,GAAI,KAAM,EAAG,IAAK,EAAG,KAAM,GAAI,KAAM,KAAM,IAAK,KAAM,KAAM,EAAG,MACvgEC,GAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,MAAO,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,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","sources":["webpack://reactree/./src/TestParser.ts","webpack://reactree/./src/extension.ts","webpack://reactree/./src/getNonce.ts","webpack://reactree/./src/panel.ts","webpack://reactree/external commonjs \"vscode\"","webpack://reactree/external node-commonjs \"fs\"","webpack://reactree/external node-commonjs \"path\"","webpack://reactree/./node_modules/@babel/parser/lib/index.js","webpack://reactree/webpack/bootstrap","webpack://reactree/webpack/startup"],"sourcesContent":["import * as babelParser from '@babel/parser';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport { getNonce } from \"./getNonce\";\r\nimport { Tree } from './types/Tree';\r\nimport { ImportObj } from './types/ImportObj';\r\nimport { File } from '@babel/types';\r\n\r\nexport class TestParser {\r\n  entryFile: string;\r\n  tree: Tree | undefined;\r\n\r\n  constructor(filePath: string) {\r\n    // Fix when selecting files in wsl file system\r\n    this.entryFile = filePath;\r\n    if (process.platform === 'linux' && this.entryFile.includes('wsl$')) {\r\n      this.entryFile = path.resolve(filePath.split(path.win32.sep).join(path.posix.sep));\r\n      this.entryFile = '/' + this.entryFile.split('/').slice(3).join('/');\r\n    // Fix for when running wsl but selecting files held on windows file system\r\n    } else if (process.platform === 'linux' && (/[a-zA-Z]/).test(this.entryFile[0])) {\r\n      const root = `/mnt/${this.entryFile[0].toLowerCase()}`;\r\n      this.entryFile = path.join(root, filePath.split(path.win32.sep).slice(1).join(path.posix.sep));\r\n    }\r\n\r\n    this.tree = undefined;\r\n    // Break down and reasemble given filePath safely for any OS using path?\r\n  }\r\n\r\n  // Public method to generate component tree based on current entryFile\r\n  public parse() : Tree {\r\n    // Create root Tree node\r\n    const root = {\r\n      id: getNonce(),\r\n      name: path.basename(this.entryFile).replace(/\\.(t|j)sx?$/, ''),\r\n      fileName: path.basename(this.entryFile),\r\n      filePath : this.entryFile,\r\n      importPath: '/', // this.entryFile here breaks windows file path on root e.g. C:\\\\ is detected as third party\r\n      expanded: false,\r\n      depth: 0,\r\n      count: 1,\r\n      thirdParty: false,\r\n      reactRouter: false,\r\n      reduxConnect: false,\r\n      children: [],\r\n      parentList: [],\r\n      props: {},\r\n      error: ''\r\n    };\r\n\r\n    this.tree = root;\r\n    this.parser(root);\r\n    return this.tree;\r\n  }\r\n\r\n  public getTree() : Tree {\r\n    return this.tree!;\r\n  }\r\n\r\n  // Set Sapling Parser with a specific Data Tree (from workspace state)\r\n  public setTree(tree : Tree) : void {\r\n    this.entryFile = tree.filePath;\r\n    this.tree = tree;\r\n  }\r\n\r\n  public updateTree(filePath : string) : Tree {\r\n      let children: any[] = [];\r\n\r\n      const getChildNodes = (node: Tree) : void => {\r\n        const { depth, filePath, expanded } = node;\r\n        children.push({ depth, filePath, expanded });\r\n      };\r\n\r\n      const matchExpand = (node: Tree) : void => {\r\n        for (let i = 0 ; i < children.length ; i += 1) {\r\n          const oldNode = children[i];\r\n            if (oldNode.depth === node.depth && oldNode.filePath === node.filePath && oldNode.expanded) {\r\n              node.expanded = true;\r\n            }\r\n        }\r\n      };\r\n\r\n      const callback = (node: Tree) : void => {\r\n        if (node.filePath === filePath) {\r\n          node.children.forEach(child => {\r\n            this.traverseTree(getChildNodes, child);\r\n          });\r\n\r\n          const newNode = this.parser(node);\r\n\r\n          this.traverseTree(matchExpand, newNode);\r\n\r\n          children = [];\r\n        }\r\n      };\r\n\r\n      this.traverseTree(callback, this.tree);\r\n\r\n      return this.tree!;\r\n    }\r\n\r\n  // Traverses the tree and changes expanded property of node whose id matches provided id\r\n  public toggleNode(id : string, expanded : boolean) : Tree {\r\n    const callback = (node: { id: string; expanded: boolean; }) => {\r\n      if (node.id === id) {\r\n        node.expanded = expanded;\r\n      }\r\n    };\r\n\r\n    this.traverseTree(callback, this.tree);\r\n\r\n    return this.tree!;\r\n  }\r\n\r\n  // Traverses all nodes of current component tree and applies callback to each node\r\n  private traverseTree(callback : Function, node : Tree | undefined = this.tree) : void {\r\n    if (!node) {\r\n      return;\r\n    }\r\n\r\n    callback(node);\r\n\r\n    node.children.forEach( (childNode) => {\r\n      this.traverseTree(callback, childNode);\r\n    });\r\n  }\r\n\r\n  // Recursively builds the React component tree structure starting from root node\r\n  private parser(componentTree: Tree) : Tree | undefined {\r\n\r\n    // If import is a node module, do not parse any deeper\r\n    if (!['\\\\', '/', '.'].includes(componentTree.importPath[0])) {\r\n      componentTree.thirdParty = true;\r\n      if (componentTree.fileName === 'react-router-dom' || componentTree.fileName === 'react-router') {\r\n        componentTree.reactRouter = true;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Check that file has valid fileName/Path, if not found, add error to node and halt\r\n    const fileName = this.getFileName(componentTree);\r\n    if (!fileName) {\r\n      componentTree.error = 'File not found.';\r\n      return;\r\n    }\r\n\r\n    // If current node recursively calls itself, do not parse any deeper:\r\n    if (componentTree.parentList.includes(componentTree.filePath)) {\r\n      return;\r\n    }\r\n\r\n    // Create abstract syntax tree of current component tree file\r\n    let ast: babelParser.ParseResult<File>;\r\n    try {\r\n      ast = babelParser.parse(fs.readFileSync(path.resolve(componentTree.filePath), 'utf-8'), {\r\n        sourceType: 'module',\r\n        tokens: true,\r\n        plugins: [\r\n          'jsx',\r\n          'typescript',\r\n        ]\r\n      });\r\n    } catch (err) {\r\n      componentTree.error = 'Error while processing this file/node';\r\n      return componentTree;\r\n    }\r\n\r\n    // Find imports in the current file, then find child components in the current file\r\n    const imports = this.getImports(ast.program.body);\r\n\r\n    // Get any JSX Children of current file:\r\n    if (ast.tokens) {\r\n      componentTree.children = this.getJSXChildren(ast.tokens, imports, componentTree);\r\n    }\r\n\r\n    // Check if current node is connected to the Redux store\r\n    if (ast.tokens) {\r\n      componentTree.reduxConnect = this.checkForRedux(ast.tokens, imports);\r\n    }\r\n\r\n    // Recursively parse all child components\r\n    componentTree.children.forEach(child => this.parser(child));\r\n\r\n    return componentTree;\r\n  }\r\n\r\n  // Finds files where import string does not include a file extension\r\n  private getFileName(componentTree: Tree) : string | undefined {\r\n    const ext = path.extname(componentTree.filePath);\r\n    let fileName: string | undefined = componentTree.fileName;\r\n\r\n    if (!ext) {\r\n      // Try and find file extension that exists in directory:\r\n      const fileArray = fs.readdirSync(path.dirname(componentTree.filePath));\r\n      const regEx = new RegExp(`${componentTree.fileName}.(j|t)sx?$`);\r\n      fileName = fileArray.find(fileStr => fileStr.match(regEx));\r\n      fileName ? componentTree.filePath += path.extname(fileName) : null;\r\n    }\r\n\r\n    return fileName;\r\n  }\r\n\r\n  // Extracts Imports from current file\r\n  // const Page1 = lazy(() => import('./page1')); -> is parsed as 'ImportDeclaration'\r\n  // import Page2 from './page2'; -> is parsed as 'VariableDeclaration'\r\n  private getImports(body : {[key : string]: any}[]) : ImportObj {\r\n    const bodyImports = body.filter(item => item.type === 'ImportDeclaration' || 'VariableDeclaration');\r\n    // console.log('bodyImports are: ', bodyImports);\r\n    return bodyImports.reduce((accum, curr) => {\r\n      // Import Declarations:\r\n      if (curr.type === 'ImportDeclaration') {\r\n        curr.specifiers.forEach((i: { local: { name: string | number; }; imported: { name: any; }; }) => {\r\n          accum[i.local.name] = {\r\n            importPath: curr.source.value,\r\n            importName: (i.imported)? i.imported.name : i.local.name\r\n          };\r\n        });\r\n      }\r\n      // Imports Inside Variable Declarations: // Not easy to deal with nested objects\r\n      if (curr.type === 'VariableDeclaration') {\r\n        const importPath = this.findVarDecImports(curr.declarations[0]);\r\n        if (importPath) {\r\n          const importName = curr.declarations[0].id.name;\r\n          accum[curr.declarations[0].id.name] = {\r\n            importPath,\r\n            importName\r\n          };\r\n        }\r\n      }\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  // Recursive helper method to find import path in Variable Declaration\r\n  private findVarDecImports(ast: {[key: string]: any}): string | boolean {\r\n    // Base Case, find import path in variable declaration and return it,\r\n    if (ast.hasOwnProperty('callee') && ast.callee.type === 'Import') {\r\n      return ast.arguments[0].value;\r\n    }\r\n\r\n    // Otherwise look for imports in any other non null/undefined objects in the tree:\r\n    for (let key in ast) {\r\n      if (ast.hasOwnProperty(key) && typeof ast[key] === 'object' && ast[key]) {\r\n        const importPath = this.findVarDecImports(ast[key]);\r\n        if (importPath) {\r\n          return importPath;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // Finds JSX React Components in current file\r\n  private getJSXChildren(astTokens: any[], importsObj : ImportObj, parentNode: Tree) : Tree[] {\r\n    let childNodes: {[key : string]: Tree} = {};\r\n    let props : {[key : string]: boolean} = {};\r\n    let token : {[key: string]: any};\r\n\r\n    for (let i = 0; i < astTokens.length; i++) {\r\n      // Case for finding JSX tags eg <App .../>\r\n      if (astTokens[i].type.label === 'jsxTagStart'\r\n      && astTokens[i + 1].type.label === 'jsxName'\r\n      && importsObj[astTokens[i + 1].value]) {\r\n        token = astTokens[i + 1];\r\n        props = this.getJSXProps(astTokens, i + 2);\r\n        childNodes = this.getChildNodes(importsObj, token, props, parentNode, childNodes);\r\n\r\n        // Case for finding components passed in as props e.g. <Route component={App} />\r\n      } else if (astTokens[i].type.label === 'jsxName'\r\n      && (astTokens[i].value === 'component' || astTokens[i].value === 'children')\r\n      && importsObj[astTokens[i + 3].value]) {\r\n        token = astTokens[i + 3];\r\n        childNodes = this.getChildNodes(importsObj, token, props, parentNode, childNodes);\r\n      }\r\n    }\r\n\r\n    return Object.values(childNodes);\r\n  }\r\n\r\n  private getChildNodes(imports : ImportObj,\r\n    astToken : {[key: string]: any}, props : {[key : string]: boolean},\r\n    parent : Tree, children : {[key : string] : Tree}) : {[key : string] : Tree} {\r\n\r\n    if (children[astToken.value]) {\r\n      children[astToken.value].count += 1;\r\n      children[astToken.value].props = {...children[astToken.value].props, ...props};\r\n    } else {\r\n      // Add tree node to childNodes if one does not exist\r\n      children[astToken.value] = {\r\n        id: getNonce(),\r\n        name: imports[astToken.value]['importName'],\r\n        fileName: path.basename(imports[astToken.value]['importPath']),\r\n        filePath: path.resolve(path.dirname(parent.filePath), imports[astToken.value]['importPath']),\r\n        importPath: imports[astToken.value]['importPath'],\r\n        expanded: false,\r\n        depth: parent.depth + 1,\r\n        thirdParty: false,\r\n        reactRouter: false,\r\n        reduxConnect: false,\r\n        count: 1,\r\n        props: props,\r\n        children: [],\r\n        parentList: [parent.filePath].concat(parent.parentList),\r\n        error: '',\r\n      };\r\n    }\r\n\r\n    return children;\r\n  }\r\n\r\n  // Extracts prop names from a JSX element\r\n  private getJSXProps(astTokens: {[key: string]: any}[], j : number) : {[key : string]: boolean} {\r\n    const props: any = {};\r\n    while (astTokens[j].type.label !== \"jsxTagEnd\") {\r\n      if (astTokens[j].type.label === \"jsxName\" && astTokens[j + 1].value === \"=\") {\r\n        props[astTokens[j].value] = true;\r\n      }\r\n      j += 1;\r\n    }\r\n    return props;\r\n  }\r\n\r\n  // Checks if current Node is connected to React-Redux Store\r\n  private checkForRedux(astTokens: any[], importsObj : ImportObj) : boolean {\r\n    // Check that react-redux is imported in this file (and we have a connect method or otherwise)\r\n    let reduxImported = false;\r\n    let connectAlias;\r\n    Object.keys(importsObj).forEach( key => {\r\n      if (importsObj[key].importPath === 'react-redux' && importsObj[key].importName === 'connect') {\r\n        reduxImported = true;\r\n        connectAlias = key;\r\n      }\r\n    });\r\n\r\n    if (!reduxImported) {\r\n      return false;\r\n    }\r\n\r\n    // Check that connect method is invoked and exported in the file\r\n    for (let i = 0; i < astTokens.length; i += 1) {\r\n      if (astTokens[i].type.label === 'export' && astTokens[i + 1].type.label === 'default' && astTokens[i + 2].value === connectAlias) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import * as vscode from 'vscode';\r\nimport ReacTreePanel from './panel'\r\n\r\nexport function activate(extContext: vscode.ExtensionContext) {\r\n  extContext.subscriptions.push(vscode.commands.registerCommand('reacTree.start', () => {\r\n      ReacTreePanel.createOrShow(extContext);\r\n}));\r\n};\r\n\r\nexport function deactivate() { }","export function getNonce() : string {\r\n  let text : string = \"\";\r\n  const possible : string =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (let i = 0; i < 32; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return text;\r\n}\r\n","import * as path from 'path';\r\nimport * as vscode from 'vscode';\r\nimport { getNonce } from \"./getNonce\";\r\nimport { TestParser } from './TestParser';\r\nimport { Tree } from \"./types/Tree\";\r\n\r\nexport default class ReacTreePanel {\r\n    \r\n    public static currentPanel: ReacTreePanel | undefined;\r\n\r\n    private static readonly viewType = \"reacTree\";\r\n\r\n    private readonly _panel: vscode.WebviewPanel;\r\n    private readonly _extensionPath: string;\r\n    parser: TestParser | undefined;\r\n    private readonly _extContext: vscode.ExtensionContext;\r\n    private _disposables: vscode.Disposable[] = [];\r\n\r\n    public static createOrShow(extContext: vscode.ExtensionContext) {\r\n\t\tconst column = vscode.window.activeTextEditor ? vscode.window.activeTextEditor.viewColumn : undefined;\r\n        \r\n\t\t// If we already have a panel, show it.\r\n\t\t// Otherwise, create a new panel.\r\n        if (ReacTreePanel.currentPanel) {\r\n            ReacTreePanel.currentPanel._panel.reveal(column);\r\n        } else {\r\n        // ReactPanel.currentPanel = new ReactPanel(extensionPath, column || vscode.ViewColumn.One);\r\n            console.log('FIRST')\r\n\t\t\tReacTreePanel.currentPanel = new ReacTreePanel(extContext, extContext.extensionPath, vscode.ViewColumn.Two);\r\n\t\t}\r\n\t}\r\n\r\n    private constructor(extContext: vscode.ExtensionContext, extensionPath: string, column: vscode.ViewColumn) {\r\n        console.log('SECOND')\r\n\t\t  this._extensionPath = extensionPath;\r\n      this._extContext = extContext;\r\n      const state: Tree | undefined = extContext.workspaceState.get('reactree');\r\n    if (state) {\r\n      this.parser = new TestParser(state.filePath);\r\n      this.parser.setTree(state);\r\n    }\r\n  \r\n\r\n\t\t// Create and show a new webview panel\r\n\t\tthis._panel = vscode.window.createWebviewPanel(ReacTreePanel.viewType, \"ReacTree\", column, {\r\n\t\t\t// Enable javascript in the webview\r\n\t\t\tenableScripts: true,\r\n\r\n\t\t\t// And restric the webview to only loading content from our extension's `media` directory.\r\n\t\t\tlocalResourceRoots: [vscode.Uri.file(path.join(this._extensionPath, \"out\"))],\r\n\t\t});\r\n\r\n\t\t// Set the webview's initial html content\r\n\t\tthis._panel.webview.html = this._getHtmlForWebview();\r\n\r\n\t\t// Listen for when the panel is disposed\r\n\t\t// This happens when the user closes the panel or when the panel is closed programatically\r\n\t\tthis._panel.onDidDispose(() => this.dispose(), null, this._disposables);\r\n        \r\n        this._panel.webview.onDidReceiveMessage(\r\n            async (msg: any) => {\r\n                switch (msg.type) {\r\n                    case 'startup':\r\n                        console.log('message received')\r\n                        // vscode.commands.executeCommand('vscode-note.note.edit', msg.data.id, msg.data.category);\r\n                        break;\r\n                    case 'testing':\r\n                        console.log('reachedBrain')\r\n                        this._panel.webview.postMessage({ command: 'refactor' });\r\n                        break;\r\n                    case 'edit-contentFile':\r\n                        vscode.commands.executeCommand('vscode-note.note.edit.col.content', msg.data.id, msg.data.n);\r\n                        break;\r\n                    case 'edit-col':\r\n                        vscode.commands.executeCommand('vscode-note.note.edit.col', msg.data.id, msg.data.cn);\r\n                        break;\r\n                    case 'doc':\r\n                        vscode.commands.executeCommand('vscode-note.note.doc.show', msg.data);\r\n                        break;\r\n                    case 'files':\r\n                        vscode.commands.executeCommand('vscode-note.note.files.open', msg.data);\r\n                        break;\r\n                    case \"onFile\": {\r\n                      // Edge case if the user sends in nothing\r\n                      if (!msg.value) {\r\n                        return;\r\n                      }\r\n                      // Run an instance of the parser\r\n                      this.parser = new TestParser(msg.value);\r\n                      this.parser.parse();\r\n                      this.updateView();\r\n                      break;\r\n                    }\r\n            \r\n                    // Case when clicking on tree to open file\r\n                    case \"onViewFile\": {\r\n                      if (!msg.value) {\r\n                        return;\r\n                      }\r\n                      // Open and the show the user the file they want to see\r\n                      const doc = await vscode.workspace.openTextDocument(msg.value);\r\n                      const editor = await vscode.window.showTextDocument(doc, {preserveFocus: false, preview: false});\r\n                      break;\r\n                    }\r\n            \r\n                    // Case when sapling becomes visible in sidebar\r\n                    case \"onReacTreeVisible\": {\r\n                      if (!this.parser) {\r\n                        return;\r\n                      }\r\n                      // Get and send the saved tree to the webview\r\n                      this.updateView();\r\n                      break;\r\n                    }\r\n            \r\n                    // Case to retrieve the user's settings\r\n                    case \"onSettingsAcquire\": {\r\n                      // use getConfiguration to check what the current settings are for the user\r\n                      const settings = await vscode.workspace.getConfiguration('reactree');\r\n                      // send a message back to the webview with the data on settings\r\n                      this._panel.webview.postMessage({\r\n                        type: \"settings-data\",\r\n                        value: settings.view\r\n                      });\r\n                      break;\r\n                    }\r\n            \r\n                    // Case that changes the parser's recorded node expanded/collapsed structure\r\n                    case \"onNodeToggle\": {\r\n                      // let the parser know that the specific node clicked changed it's expanded value, save in state\r\n                      this._extContext.workspaceState.update(\r\n                        'reactree',\r\n                        this.parser!.toggleNode(msg.value.id, msg.value.expanded)\r\n                      );\r\n                      break;\r\n                    }\r\n            \r\n                    // Message sent to the webview to bold the active file\r\n                    case \"onBoldCheck\": {\r\n                      // Check there is an activeText Editor\r\n                      const fileName = vscode.window.activeTextEditor ? vscode.window.activeTextEditor.document.fileName: null;\r\n                      // Message sent to the webview to bold the active file\r\n                      if (fileName) {\r\n                        this._panel.webview.postMessage({\r\n                          type: \"current-tab\",\r\n                          value: fileName\r\n                        });\r\n                      }\r\n                      break;\r\n                    }\r\n                }\r\n            },\r\n            null,\r\n            this._disposables\r\n        );\r\n    }\r\n\r\n    public dispose() {\r\n      ReacTreePanel.currentPanel = undefined;\r\n          console.log('dipose part 1')\r\n      // Clean up our resources\r\n      this._panel.dispose();\r\n          console.log('dipose part 2')\r\n\r\n      while (this._disposables.length) {\r\n        const x = this._disposables.pop();\r\n        if (x) {\r\n          x.dispose();\r\n        }\r\n      }\r\n    }\r\n  \r\n    private updateView() {\r\n      // Save current state of tree to workspace state:\r\n      const tree = this.parser!.getTree();\r\n      this._extContext.workspaceState.update('reactree', tree);\r\n      // Send updated tree to webview\r\n      this._panel.webview.postMessage({\r\n        type: \"parsed-data\",\r\n        value: tree\r\n      });\r\n    }\r\n\r\n    private _getHtmlForWebview() {\r\n\t\tconst scriptPathOnDisk = vscode.Uri.file(path.join(this._extensionPath, \"out\", 'main.wv.js'));\r\n\t\tconst scriptUri = scriptPathOnDisk.with({ scheme: \"vscode-resource\" });\r\n\r\n\t\t// Use a nonce to whitelist which scripts can be run\r\n\t\tconst nonce = getNonce();\r\n\r\n\t\treturn `<!DOCTYPE html>\r\n        <html lang=\"en\">\r\n        <head>\r\n            <meta charset=\"UTF-8\">\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n            <title>reacttree</title>\r\n        </head>\r\n        <body>\r\n            <div id=\"root\"></div>\r\n            <script>\r\n                const vscode = acquireVsCodeApi();\r\n                window.onload = function() {\r\n                    vscode.postMessage({ command: 'startup' });\r\n                    console.log('HTML started up.');\r\n                };\r\n            </script>\r\n            <script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>\r\n        </body>\r\n        </html>\r\n        `;\r\n\t}\r\n}","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nclass Position {\n  constructor(line, col, index) {\n    this.line = void 0;\n    this.column = void 0;\n    this.index = void 0;\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n}\nfunction createPositionWithColumnOffset(position, columnOffset) {\n  const {\n    line,\n    column,\n    index\n  } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n\nvar ParseErrorCode = {\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n};\nconst reflect = (keys, last = keys.length - 1) => ({\n  get() {\n    return keys.reduce((object, key) => object[key], this);\n  },\n  set(value) {\n    keys.reduce((item, key, i) => i === last ? item[key] = value : item[key], this);\n  }\n});\nconst instantiate = (constructor, properties, descriptors) => Object.keys(descriptors).map(key => [key, descriptors[key]]).filter(([, descriptor]) => !!descriptor).map(([key, descriptor]) => [key, typeof descriptor === \"function\" ? {\n  value: descriptor,\n  enumerable: false\n} : typeof descriptor.reflect === \"string\" ? Object.assign({}, descriptor, reflect(descriptor.reflect.split(\".\"))) : descriptor]).reduce((instance, [key, descriptor]) => Object.defineProperty(instance, key, Object.assign({\n  configurable: true\n}, descriptor)), Object.assign(new constructor(), properties));\n\nvar ModuleErrors = {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError\n  }\n};\n\nconst NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\"\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\"\n};\nconst toNodeDescription = ({\n  type,\n  prefix\n}) => type === \"UpdateExpression\" ? NodeDescriptions.UpdateExpression[String(prefix)] : NodeDescriptions[type];\n\nvar StandardErrors = {\n  AccessorIsGenerator: ({\n    kind\n  }) => `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitInUsingBinding: \"'await' is not allowed to be used as a name in 'using' declarations.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses: \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({\n    exportName\n  }) => `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName\n  }) => `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: ({\n    type\n  }) => `'${type === \"ForInStatement\" ? \"for-in\" : \"for-of\"}' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: ({\n    type\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({\n    importName\n  }) => `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({\n    maxArgumentCount\n  }) => `\\`import()\\` requires exactly ${maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"}.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault: \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding: 'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags: \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({\n    radix\n  }) => `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({\n    reservedWord\n  }) => `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({\n    identifierName\n  }) => `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({\n    ancestor\n  }) => `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({\n    ancestor\n  }) => `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({\n    unexpected\n  }) => `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({\n    labelName\n  }) => `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling the parser plugin: ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingOneOfPlugins: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({\n    key\n  }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode\n  }) => `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(16)}'.`,\n  ModuleExportUndefined: ({\n    localName\n  }) => `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({\n    identifierName\n  }) => `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({\n    identifierName\n  }) => `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({\n    keyword\n  }) => `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({\n    reservedWord\n  }) => `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected\n  }) => `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${expected ? `, expected \"${expected}\"` : \"\"}`,\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration: \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName\n  }) => `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationHasBindingPattern: \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({\n    identifierName\n  }) => `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n};\n\nvar StrictModeErrors = {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: ({\n    referenceName\n  }) => `Assigning to '${referenceName}' in strict mode.`,\n  StrictEvalArgumentsBinding: ({\n    bindingName\n  }) => `Binding '${bindingName}' in strict mode.`,\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\"\n};\n\nconst UnparenthesizedPipeBodyDescriptions = new Set([\"ArrowFunctionExpression\", \"AssignmentExpression\", \"ConditionalExpression\", \"YieldExpression\"]);\nvar PipelineOperatorErrors = {\n  PipeBodyIsTighter: \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({\n    token\n  }) => `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({\n    type\n  }) => `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n    type\n  })}; please wrap it in parentheses.`,\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.'\n};\n\nconst _excluded$1 = [\"toMessage\"],\n  _excluded2$1 = [\"message\"];\nfunction toParseErrorConstructor(_ref) {\n  let {\n      toMessage\n    } = _ref,\n    properties = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  return function constructor({\n    loc,\n    details\n  }) {\n    return instantiate(SyntaxError, Object.assign({}, properties, {\n      loc\n    }), {\n      clone(overrides = {}) {\n        const loc = overrides.loc || {};\n        return constructor({\n          loc: new Position(\"line\" in loc ? loc.line : this.loc.line, \"column\" in loc ? loc.column : this.loc.column, \"index\" in loc ? loc.index : this.loc.index),\n          details: Object.assign({}, this.details, overrides.details)\n        });\n      },\n      details: {\n        value: details,\n        enumerable: false\n      },\n      message: {\n        get() {\n          return `${toMessage(this.details)} (${this.loc.line}:${this.loc.column})`;\n        },\n        set(value) {\n          Object.defineProperty(this, \"message\", {\n            value\n          });\n        }\n      },\n      pos: {\n        reflect: \"loc.index\",\n        enumerable: true\n      },\n      missingPlugin: \"missingPlugin\" in details && {\n        reflect: \"details.missingPlugin\",\n        enumerable: true\n      }\n    });\n  };\n}\nfunction ParseErrorEnum(argument, syntaxPlugin) {\n  if (Array.isArray(argument)) {\n    return parseErrorTemplates => ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n  const ParseErrorConstructors = {};\n  for (const reasonCode of Object.keys(argument)) {\n    const template = argument[reasonCode];\n    const _ref2 = typeof template === \"string\" ? {\n        message: () => template\n      } : typeof template === \"function\" ? {\n        message: template\n      } : template,\n      {\n        message\n      } = _ref2,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded2$1);\n    const toMessage = typeof message === \"string\" ? () => message : message;\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor(Object.assign({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage\n    }, syntaxPlugin ? {\n      syntaxPlugin\n    } : {}, rest));\n  }\n  return ParseErrorConstructors;\n}\nconst Errors = Object.assign({}, ParseErrorEnum(ModuleErrors), ParseErrorEnum(StandardErrors), ParseErrorEnum(StrictModeErrors), ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors));\n\nconst {\n  defineProperty\n} = Object;\nconst toUnenumerable = (object, key) => defineProperty(object, key, {\n  enumerable: false,\n  value: object[key]\n});\nfunction toESTreeLocation(node) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n  return node;\n}\nvar estree = (superClass => class ESTreeParserMixin extends superClass {\n  parse() {\n    const file = toESTreeLocation(super.parse());\n    if (this.options.tokens) {\n      file.tokens = file.tokens.map(toESTreeLocation);\n    }\n    return file;\n  }\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n  parseBigIntLiteral(value) {\n    let bigInt;\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  directiveToStmt(directive) {\n    const expression = directive.value;\n    delete directive.value;\n    expression.type = \"Literal\";\n    expression.raw = expression.extra.raw;\n    expression.value = expression.extra.expressionValue;\n    const stmt = directive;\n    stmt.type = \"ExpressionStatement\";\n    stmt.expression = expression;\n    stmt.directive = expression.extra.rawValue;\n    delete expression.extra;\n    return stmt;\n  }\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    super.parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n    classBody.body.push(method);\n  }\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n    return this.finishNode(node, \"MethodDefinition\");\n  }\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") {\n        node.kind = \"init\";\n      }\n      node.shorthand = false;\n    }\n    return node;\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n    return node;\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return type === \"Property\" ? \"value\" : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n    return super.isAssignable(node, isBinding);\n  }\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      const {\n        key,\n        value\n      } = node;\n      if (this.isPrivateName(key)) {\n        this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n      }\n      this.toAssignable(value, isLHS);\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(Errors.PatternHasAccessor, {\n        at: prop.key\n      });\n    } else if (prop.method) {\n      this.raise(Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else {\n      super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n    }\n  }\n  finishCallExpression(unfinished, optional) {\n    const node = super.finishCallExpression(unfinished, optional);\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n      delete node.arguments;\n      delete node.callee;\n    }\n    return node;\n  }\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n    super.toReferencedArguments(node);\n  }\n  parseExport(unfinished, decorators) {\n    const exportStartLoc = this.state.lastTokStartLoc;\n    const node = super.parseExport(unfinished, decorators);\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n      case \"ExportDefaultDeclaration\":\n        {\n          var _declaration$decorato;\n          const {\n            declaration\n          } = node;\n          if ((declaration == null ? void 0 : declaration.type) === \"ClassDeclaration\" && ((_declaration$decorato = declaration.decorators) == null ? void 0 : _declaration$decorato.length) > 0 && declaration.start === node.start) {\n            this.resetStartLocation(node, exportStartLoc);\n          }\n        }\n        break;\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startLoc, noCalls, state);\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n    return node;\n  }\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n    return super.hasPropertyAsPrivateName(node);\n  }\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n  finishNodeAt(node, type, endLoc) {\n    return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n  }\n  resetStartLocation(node, startLoc) {\n    super.resetStartLocation(node, startLoc);\n    toESTreeLocation(node);\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    super.resetEndLocation(node, endLoc);\n    toESTreeLocation(node);\n  }\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  j_oTag: new TokContext(\"<tag\"),\n  j_cTag: new TokContext(\"</tag\"),\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\n};\n{\n  types.template = new TokContext(\"`\", true);\n}\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n}\nconst keywords$1 = new Map();\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\nlet tokenTypeCounter = -1;\nconst tokenTypes = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  templateTail: createToken(\"...`\", {\n    startsExpr\n  }),\n  templateNonTail: createToken(\"...${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  doubleCaret: createToken(\"^^\", {\n    startsExpr\n  }),\n  doubleAt: createToken(\"@@\", {\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _using: createKeywordLike(\"using\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _satisfies: createKeywordLike(\"satisfies\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 93 && token <= 130;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 92;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 58 && token <= 130;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 58 && token <= 134;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 29 && token <= 33;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 127 && token <= 129;\n}\nfunction tokenIsLoop(token) {\n  return token >= 90 && token <= 92;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 58 && token <= 92;\n}\nfunction tokenIsOperator(token) {\n  return token >= 39 && token <= 59;\n}\nfunction tokenIsPostfix(token) {\n  return token === 34;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 119 && token <= 121;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 122 && token <= 128;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 57;\n}\nfunction tokenIsTemplate(token) {\n  return token >= 24 && token <= 25;\n}\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\n{\n  tokenTypes[8].updateContext = context => {\n    context.pop();\n  };\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\n    context.push(types.brace);\n  };\n  tokenTypes[22].updateContext = context => {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n  tokenTypes[140].updateContext = context => {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next, next2) {\n  return current === 64 && next === 64 && isIdentifierStart(next2);\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n  SCOPE_PROGRAM = 0b000000001,\n  SCOPE_FUNCTION = 0b000000010,\n  SCOPE_ARROW = 0b000000100,\n  SCOPE_SIMPLE_CATCH = 0b000001000,\n  SCOPE_SUPER = 0b000010000,\n  SCOPE_DIRECT_SUPER = 0b000100000,\n  SCOPE_CLASS = 0b001000000,\n  SCOPE_STATIC_BLOCK = 0b010000000,\n  SCOPE_TS_MODULE = 0b100000000,\n  SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_STATIC_BLOCK | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b0000000000001,\n  BIND_KIND_TYPE = 0b0000000000010,\n  BIND_SCOPE_VAR = 0b0000000000100,\n  BIND_SCOPE_LEXICAL = 0b0000000001000,\n  BIND_SCOPE_FUNCTION = 0b0000000010000,\n  BIND_FLAGS_NONE = 0b00000001000000,\n  BIND_FLAGS_CLASS = 0b00000010000000,\n  BIND_FLAGS_TS_ENUM = 0b00000100000000,\n  BIND_FLAGS_TS_CONST_ENUM = 0b00001000000000,\n  BIND_FLAGS_TS_EXPORT_ONLY = 0b00010000000000,\n  BIND_FLAGS_FLOW_DECLARE_FN = 0b00100000000000,\n  BIND_FLAGS_TS_IMPORT = 0b01000000000000,\n  BIND_FLAGS_NO_LET_IN_LEXICAL = 0b10000000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_CATCH_PARAM = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n  BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n  BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n  BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n  BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n  BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n  BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n  BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n  BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_TS_TYPE_IMPORT = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_TS_IMPORT,\n  BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n  CLASS_ELEMENT_KIND_GETTER = 0b010,\n  CLASS_ELEMENT_KIND_SETTER = 0b001,\n  CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n  CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n  CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n  CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n}\nclass ScopeHandler {\n  constructor(parser, inModule) {\n    this.parser = void 0;\n    this.scopeStack = [];\n    this.inModule = void 0;\n    this.undefinedExports = new Map();\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n  get inTopLevel() {\n    return (this.currentScope().flags & SCOPE_PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n  createScope(flags) {\n    return new Scope(flags);\n  }\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n  exit() {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) || !this.parser.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n  declareName(name, bindingType, loc) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  maybeExportDefined(scope, name) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  checkRedeclarationInScope(scope, name, bindingType, loc) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n}\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n  declareName(name, bindingType, loc) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n    return false;\n  }\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n  hasPlugin(pluginConfig) {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(pluginOptions)) {\n        if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  getPluginOption(plugin, name) {\n    var _this$plugins$get;\n    return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\n  }\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n    const {\n      start: nodeStart\n    } = node;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        break;\n      }\n    }\n  }\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n    default:\n      return false;\n  }\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.inDisallowConditionalTypesContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 137;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.firstInvalidTemplateEscapePos = null;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n      state[key] = val;\n    }\n    return state;\n  }\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([46, 66, 69, 79, 95, 98, 101, 111]),\n  hex: new Set([46, 88, 95, 120])\n};\nconst isAllowedNumericSeparatorSibling = {\n  bin: ch => ch === 48 || ch === 49,\n  oct: ch => ch >= 48 && ch <= 55,\n  dec: ch => ch >= 48 && ch <= 57,\n  hex: ch => ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\n};\nfunction readStringContents(type, input, pos, lineStart, curLine, errors) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const {\n    length\n  } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === 92) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(input, pos, lineStart, curLine, type === \"template\", errors);\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = {\n          pos,\n          lineStart,\n          curLine\n        };\n      } else {\n        out += res.ch;\n      }\n      ({\n        pos,\n        lineStart,\n        curLine\n      } = res);\n      chunkStart = pos;\n    } else if (ch === 8232 || ch === 8233) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === 10 || ch === 13) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (ch === 13 && input.charCodeAt(pos) === 10) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return {\n    pos,\n    str: out,\n    firstInvalidLoc,\n    lineStart,\n    curLine,\n    containsInvalid: !!firstInvalidLoc\n  };\n}\nfunction isStringEnd(type, ch, input, pos) {\n  if (type === \"template\") {\n    return ch === 96 || ch === 36 && input.charCodeAt(pos + 1) === 123;\n  }\n  return ch === (type === \"double\" ? 34 : 39);\n}\nfunction readEscapedChar(input, pos, lineStart, curLine, inTemplate, errors) {\n  const throwOnInvalid = !inTemplate;\n  pos++;\n  const res = ch => ({\n    pos,\n    ch,\n    lineStart,\n    curLine\n  });\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case 110:\n      return res(\"\\n\");\n    case 114:\n      return res(\"\\r\");\n    case 120:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readHexChar(input, pos, lineStart, curLine, 2, false, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCharCode(code));\n      }\n    case 117:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCodePoint(code));\n      }\n    case 116:\n      return res(\"\\t\");\n    case 98:\n      return res(\"\\b\");\n    case 118:\n      return res(\"\\u000b\");\n    case 102:\n      return res(\"\\f\");\n    case 13:\n      if (input.charCodeAt(pos) === 10) {\n        ++pos;\n      }\n    case 10:\n      lineStart = pos;\n      ++curLine;\n    case 8232:\n    case 8233:\n      return res(\"\");\n    case 56:\n    case 57:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\n        let octalStr = match[0];\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (octalStr !== \"0\" || next === 56 || next === 57) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n        return res(String.fromCharCode(octal));\n      }\n      return res(String.fromCharCode(ch));\n  }\n}\nfunction readHexChar(input, pos, lineStart, curLine, len, forceLen, throwOnInvalid, errors) {\n  const initialPos = pos;\n  let n;\n  ({\n    n,\n    pos\n  } = readInt(input, pos, lineStart, curLine, 16, len, forceLen, false, errors, !throwOnInvalid));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return {\n    code: n,\n    pos\n  };\n}\nfunction readInt(input, pos, lineStart, curLine, radix, len, forceLen, allowNumSeparator, errors, bailOnError) {\n  const start = pos;\n  const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling = radix === 16 ? isAllowedNumericSeparatorSibling.hex : radix === 10 ? isAllowedNumericSeparatorSibling.dec : radix === 8 ? isAllowedNumericSeparatorSibling.oct : isAllowedNumericSeparatorSibling.bin;\n  let invalid = false;\n  let total = 0;\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n    if (code === 95 && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n      if (!allowNumSeparator) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (Number.isNaN(next) || !isAllowedSibling(next) || forbiddenSiblings.has(prev) || forbiddenSiblings.has(next)) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n      ++pos;\n      continue;\n    }\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } else if (code >= 65) {\n      val = code - 65 + 10;\n    } else if (_isDigit(code)) {\n      val = code - 48;\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      if (val <= 9 && bailOnError) {\n        return {\n          n: null,\n          pos\n        };\n      } else if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || len != null && pos - start !== len || invalid) {\n    return {\n      n: null,\n      pos\n    };\n  }\n  return {\n    n: total,\n    pos\n  };\n}\nfunction readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors) {\n  const ch = input.charCodeAt(pos);\n  let code;\n  if (ch === 123) {\n    ++pos;\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, input.indexOf(\"}\", pos) - pos, true, throwOnInvalid, errors));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return {\n          code: null,\n          pos\n        };\n      }\n    }\n  } else {\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, 4, false, throwOnInvalid, errors));\n  }\n  return {\n    code,\n    pos\n  };\n}\n\nconst _excluded = [\"at\"],\n  _excluded2 = [\"at\"];\nfunction buildPosition(pos, lineStart, curLine) {\n  return new Position(curLine, pos - lineStart, pos);\n}\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100, 118]);\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n}\nclass Tokenizer extends CommentsParser {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.errorHandlers_readInt = {\n      invalidDigit: (pos, lineStart, curLine, radix) => {\n        if (!this.options.errorRecovery) return false;\n        this.raise(Errors.InvalidDigit, {\n          at: buildPosition(pos, lineStart, curLine),\n          radix\n        });\n        return true;\n      },\n      numericSeparatorInEscapeSequence: this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),\n      unexpectedNumericSeparator: this.errorBuilder(Errors.UnexpectedNumericSeparator)\n    };\n    this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {\n      invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n      invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint)\n    });\n    this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: (pos, lineStart, curLine) => {\n        this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      },\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedString, {\n          at: buildPosition(pos - 1, lineStart, curLine)\n        });\n      }\n    });\n    this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedTemplate, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      }\n    });\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n  next() {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n  match(type) {\n    return this.state.type === type;\n  }\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition\n    };\n  }\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n  setStrict(strict) {\n    this.state.strict = strict;\n    if (strict) {\n      this.state.strictErrors.forEach(([toParseError, at]) => this.raise(toParseError, {\n        at\n      }));\n      this.state.strictErrors.clear();\n    }\n  }\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n  nextToken() {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(137);\n      return;\n    }\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n  skipBlockComment(commentEnd) {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment(\"*/\");\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            default:\n              break loop;\n          }\n          break;\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= 48 && next <= 57) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition()\n      });\n    }\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(next === 123 ? Errors.RecordExpressionHashIncorrectStartSyntaxType : Errors.TupleExpressionHashIncorrectStartSyntaxType, {\n          at: this.state.curPosition()\n        });\n      }\n      this.state.pos += 2;\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(136, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(136, this.readWord1());\n    } else {\n      this.finishOp(27, 1);\n    }\n  }\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(31, 2);\n    } else {\n      this.finishOp(56, 1);\n    }\n  }\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(28, value);\n    return true;\n  }\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 55 : 54;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 57;\n    }\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 33 : 30;\n    }\n    this.finishOp(type, width);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(code === 124 ? 41 : 42, 2);\n      }\n      return;\n    }\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(39, 2);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n      return;\n    }\n    this.finishOp(code === 124 ? 43 : 45, 1);\n  }\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(32, 2);\n    } else if (next === 94 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"^^\"\n    }])) {\n      this.finishOp(37, 2);\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === 94) {\n        throw this.unexpected();\n      }\n    } else {\n      this.finishOp(44, 1);\n    }\n  }\n  readToken_atSign() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 64 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"@@\"\n    }])) {\n      this.finishOp(38, 2);\n    } else {\n      this.finishOp(26, 1);\n    }\n  }\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      this.finishOp(34, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(53, 1);\n    }\n  }\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(30, 3);\n        return;\n      }\n      this.finishOp(51, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(47, 1);\n  }\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(30, size + 1);\n        return;\n      }\n      this.finishOp(52, size);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(48, 1);\n  }\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n    this.finishOp(code === 61 ? 29 : 35, 1);\n  }\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(40, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n        return;\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n        return;\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n        return;\n      case 63:\n        this.readToken_question();\n        return;\n      case 96:\n        this.readTemplateToken();\n        return;\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n      case 47:\n        this.readToken_slash();\n        return;\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n      case 94:\n        this.readToken_caret();\n        return;\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n      case 60:\n        this.readToken_lt();\n        return;\n      case 62:\n        this.readToken_gt();\n        return;\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n      case 126:\n        this.finishOp(36, 1);\n        return;\n      case 64:\n        this.readToken_atSign();\n        return;\n      case 35:\n        this.readToken_numberSign();\n        return;\n      case 92:\n        this.readWord();\n        return;\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code)\n    });\n  }\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n  readRegexp() {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n        escaped = ch === 92;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n    const nextPos = () => createPositionWithColumnOffset(startLoc, pos + 2 - start);\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === 118) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        } else if (cp === 117) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, {\n            at: nextPos()\n          });\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(Errors.MalformedRegExpFlags, {\n          at: nextPos()\n        });\n      } else {\n        break;\n      }\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n    this.finishToken(135, {\n      pattern: content,\n      flags: mods\n    });\n  }\n  readInt(radix, len, forceLen = false, allowNumSeparator = true) {\n    const {\n      n,\n      pos\n    } = readInt(this.input, this.state.pos, this.state.lineStart, this.state.curLine, radix, len, forceLen, allowNumSeparator, this.errorHandlers_readInt, false);\n    this.state.pos = pos;\n    return n;\n  }\n  readRadixNumber(radix) {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(Errors.InvalidDecimal, {\n        at: startLoc\n      });\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n    if (isBigInt) {\n      const str = this.input.slice(startLoc.index, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(133, str);\n      return;\n    }\n    this.finishToken(132, val);\n  }\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, {\n        at: this.state.curPosition()\n      });\n    }\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, {\n        at: startLoc\n      });\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos)\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, {\n          at: startLoc\n        });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, {\n          at: startLoc\n        });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, {\n          at: startLoc\n        });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n    if (isBigInt) {\n      this.finishToken(133, str);\n      return;\n    }\n    if (isDecimal) {\n      this.finishToken(134, str);\n      return;\n    }\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(132, val);\n  }\n  readCodePoint(throwOnInvalid) {\n    const {\n      code,\n      pos\n    } = readCodePoint(this.input, this.state.pos, this.state.lineStart, this.state.curLine, throwOnInvalid, this.errorHandlers_readCodePoint);\n    this.state.pos = pos;\n    return code;\n  }\n  readString(quote) {\n    const {\n      str,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(quote === 34 ? \"double\" : \"single\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(131, str);\n  }\n  readTemplateContinuation() {\n    if (!this.match(8)) {\n      this.unexpected(null, 8);\n    }\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n  readTemplateToken() {\n    const opening = this.input[this.state.pos];\n    const {\n      str,\n      firstInvalidLoc,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(\"template\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(firstInvalidLoc.curLine, firstInvalidLoc.pos - firstInvalidLoc.lineStart, firstInvalidLoc.pos);\n    }\n    if (this.input.codePointAt(pos) === 96) {\n      this.finishToken(24, firstInvalidLoc ? null : opening + str + \"`\");\n    } else {\n      this.state.pos++;\n      this.finishToken(25, firstInvalidLoc ? null : opening + str + \"${\");\n    }\n  }\n  recordStrictModeErrors(toParseError, {\n    at\n  }) {\n    const index = at.index;\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, {\n        at\n      });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition()\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, {\n              at: escStart\n            });\n          }\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(130, word);\n    }\n  }\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type)\n      });\n    }\n  }\n  raise(toParseError, raiseProperties) {\n    const {\n        at\n      } = raiseProperties,\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded);\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError({\n      loc,\n      details\n    });\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n    return error;\n  }\n  raiseOverwrite(toParseError, raiseProperties) {\n    const {\n        at\n      } = raiseProperties,\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded2);\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return errors[i] = toParseError({\n          loc,\n          details\n        });\n      }\n      if (error.loc.index < pos) break;\n    }\n    return this.raise(toParseError, raiseProperties);\n  }\n  updateContext(prevType) {}\n  unexpected(loc, type) {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc\n    });\n  }\n  expectPlugin(pluginName, loc) {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName]\n    });\n  }\n  expectOnePlugin(pluginNames) {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames\n      });\n    }\n  }\n  errorBuilder(error) {\n    return (pos, lineStart, curLine) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine)\n      });\n    };\n  }\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n}\nclass ClassScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.parser = parser;\n  }\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name\n        });\n      }\n    }\n  }\n  declarePrivateName(name, elementType, loc) {\n    const {\n      privateNames,\n      loneAccessors,\n      undefinedPrivateNames\n    } = this.current();\n    let redefined = privateNames.has(name);\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n  usePrivateName(name, loc) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n}\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.declarationErrors = new Map();\n  }\n  recordDeclarationError(ParsingErrorClass, {\n    at\n  }) {\n    const index = at.index;\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(iterator) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\nclass ExpressionScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [new ExpressionScope()];\n    this.parser = parser;\n  }\n  enter(scope) {\n    this.stack.push(scope);\n  }\n  exit() {\n    this.stack.pop();\n  }\n  recordParameterInitializerError(toParseError, {\n    at: node\n  }) {\n    const origin = {\n      at: node.loc.start\n    };\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n  recordArrowParameterBindingError(error, {\n    at: node\n  }) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n    const origin = {\n      at: node.loc.start\n    };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n  recordAsyncArrowParametersError({\n    at\n  }) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, {\n          at\n        });\n      }\n      scope = stack[--i];\n    }\n  }\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, {\n        at: loc\n      });\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n  PARAM_YIELD = 0b0001,\n  PARAM_AWAIT = 0b0010,\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n  exit() {\n    this.stacks.pop();\n  }\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, value, enumerable = true) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, {\n        enumerable,\n        value\n      });\n    }\n  }\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n    return false;\n  }\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  expectContextual(token, toParseError) {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, {\n          at: this.state.startLoc\n        });\n      }\n      throw this.unexpected(null, token);\n    }\n  }\n  canInsertSemicolon() {\n    return this.match(137) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEndLoc.index, this.state.start));\n  }\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(Errors.MissingSemicolon, {\n      at: this.state.lastTokEndLoc\n    });\n  }\n  expect(type, loc) {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n      throw error;\n    }\n  }\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc\n    } = refExpressionErrors;\n    const hasErrors = !!shorthandAssignLoc || !!doubleProtoLoc || !!optionalParametersLoc || !!privateKeyLoc;\n    if (!andThrow) {\n      return hasErrors;\n    }\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc\n      });\n    }\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, {\n        at: doubleProtoLoc\n      });\n    }\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, {\n        at: privateKeyLoc\n      });\n    }\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n  checkDestructuringPrivate(refExpressionErrors) {\n    const {\n      privateKeyLoc\n    } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssignLoc = null;\n    this.doubleProtoLoc = null;\n    this.privateKeyLoc = null;\n    this.optionalParametersLoc = null;\n  }\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n}\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n    return newNode;\n  };\n}\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n  startNodeAt(loc) {\n    return new Node(this, loc.index, loc);\n  }\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.loc.start);\n  }\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n  finishNodeAt(node, type, endLoc) {\n    node.type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n  resetStartLocation(node, startLoc) {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: ({\n    reservedType\n  }) => `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName\n  }) => `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName\n  }) => `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({\n    enumName\n  }) => `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName\n  }) => `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName\n  }) => `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType\n  }) => `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName\n  }) => `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName\n  }) => `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion\n  }) => `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName\n  }) => `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName\n  }) => `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: Object.assign({\n    message: \"A binding pattern parameter cannot be optional in an implementation signature.\"\n  }, {\n    reasonCode: \"OptionalBindingPattern\"\n  }),\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({\n    reservedType\n  }) => `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion\n  }) => `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n});\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\nfunction isMaybeDefaultImport(type) {\n  return tokenIsKeywordOrIdentifier(type) && type !== 97;\n}\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class FlowParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n  finishToken(type, val) {\n    if (type !== 131 && type !== 13 && type !== 28) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n    return super.finishToken(type, val);\n  }\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n    return super.addComment(comment);\n  }\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloLoc = this.state.startLoc;\n    this.next();\n    this.expectContextual(108);\n    if (this.state.lastTokStart > moduloLoc.index + 1) {\n      this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n        at: moduloLoc\n      });\n    }\n    if (this.eat(10)) {\n      node.value = super.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n    if (this.match(54)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n      if (this.match(54)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n    return [type, predicate];\n  }\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n    if (this.match(47)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.loc.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n  flowParseDeclare(node, insideModule) {\n    if (this.match(80)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(68)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(74)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(125)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(FlowErrors.NestedDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(128)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(129)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(127)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(82)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n    if (this.match(131)) {\n      node.id = super.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n      if (this.match(83)) {\n        this.next();\n        if (!this.isContextual(128) && !this.match(87)) {\n          this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        super.parseImport(bodyNode);\n      } else {\n        this.expectContextual(123, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n      body.push(bodyNode);\n    }\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n            at: bodyElement\n          });\n        }\n        if (kind === \"ES\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(82);\n    if (this.eat(65)) {\n      if (this.match(68) || this.match(80)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(75) || this.isLet() || (this.isContextual(128) || this.isContextual(127)) && !insideModule) {\n        const label = this.state.value;\n        throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n          at: this.state.startLoc,\n          unsupportedExportKind: label,\n          suggestion: exportSuggestions[label]\n        });\n      }\n      if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(129)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(55) || this.match(5) || this.isContextual(127) || this.isContextual(128) || this.isContextual(129)) {\n        node = this.parseExport(node, null);\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n    throw this.unexpected();\n  }\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(109);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    const finished = this.flowParseTypeAlias(node);\n    finished.type = \"DeclareTypeAlias\";\n    return finished;\n  }\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    const finished = this.flowParseOpaqueType(node, true);\n    finished.type = \"DeclareOpaqueType\";\n    return finished;\n  }\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n    if (this.isContextual(115)) {\n      this.next();\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n    if (this.isContextual(111)) {\n      this.next();\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n        at: this.state.startLoc\n      });\n    }\n  }\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, {\n      at: startLoc,\n      reservedType: word\n    });\n  }\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.startLoc, declaration);\n    return this.parseIdentifier(liberal);\n  }\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.right = this.flowParseTypeInitialiser(29);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(128);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.supertype = null;\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n    node.impltype = null;\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(29);\n    }\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStartLoc = this.state.startLoc;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n    if (this.match(29)) {\n      this.eat(29);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(FlowErrors.MissingTypeParamDefault, {\n          at: nodeStartLoc\n        });\n      }\n    }\n    return this.finishNode(node, \"TypeParameter\");\n  }\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n    if (this.match(47) || this.match(140)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    let defaultRequired = false;\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    } while (!this.match(48));\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n    while (!this.match(48)) {\n      node.params.push(this.flowParseType());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    while (!this.match(48)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(127);\n    node.extends = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n  flowParseObjectPropertyKey() {\n    return this.match(132) || this.match(131) ? super.parseExprAtom() : this.parseIdentifier(true);\n  }\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n    if (this.match(47) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n    } else {\n      node.method = false;\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n      node.value = this.flowParseTypeInitialiser();\n    }\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    this.expect(10);\n    if (this.match(78)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n    nodeStart.exact = exact;\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStartLoc = null;\n      let inexactStartLoc = null;\n      const node = this.startNode();\n      if (allowProto && this.isContextual(116)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStartLoc = this.state.startLoc;\n          allowStatic = false;\n        }\n      }\n      if (allowStatic && this.isContextual(104)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n      const variance = this.flowParseVariance();\n      if (this.eat(0)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(47)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n        if (this.isContextual(98) || this.isContextual(103)) {\n          const lookahead = this.lookahead();\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStartLoc = this.state.lastTokStartLoc;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n      this.flowObjectTypeSemicolon();\n      if (inexactStartLoc && !this.match(8) && !this.match(9)) {\n        this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n          at: inexactStartLoc\n        });\n      }\n    }\n    this.expect(endDelim);\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n  flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(FlowErrors.InexactInsideNonObject, {\n            at: this.state.lastTokStartLoc\n          });\n        } else if (!allowInexact) {\n          this.raise(FlowErrors.InexactInsideExact, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        if (variance) {\n          this.raise(FlowErrors.InexactVariance, {\n            at: variance\n          });\n        }\n        return null;\n      }\n      if (!allowSpread) {\n        this.raise(FlowErrors.UnexpectedSpreadType, {\n          at: this.state.lastTokStartLoc\n        });\n      }\n      if (protoStartLoc != null) {\n        this.unexpected(protoStartLoc);\n      }\n      if (variance) {\n        this.raise(FlowErrors.SpreadVariance, {\n          at: variance\n        });\n      }\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStartLoc != null;\n      node.kind = kind;\n      let optional = false;\n      if (this.match(47) || this.match(10)) {\n        node.method = true;\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, {\n            at: node.value.this\n          });\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n        if (this.eat(17)) {\n          optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n    if (property.value.this) {\n      this.raise(property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam, {\n        at: property.value.this\n      });\n    }\n    if (length !== paramCount) {\n      this.raise(property.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: property\n      });\n    }\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: property\n      });\n    }\n  }\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n  flowParseQualifiedTypeIdentifier(startLoc, id) {\n    var _startLoc;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n    return node;\n  }\n  flowParseGenericType(startLoc, id) {\n    const node = this.startNodeAt(startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(87);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 78;\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node\n        });\n      }\n      name = this.parseIdentifier(isThis);\n      if (this.eat(17)) {\n        optional = true;\n        if (isThis) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n            at: node\n          });\n        }\n      }\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n    if (this.match(78)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n  flowIdentToTypeAnnotation(startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startLoc, id);\n    }\n  }\n  flowParsePrimaryType() {\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n      case 47:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 10:\n        this.next();\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 131:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n      case 85:\n      case 86:\n        node.value = this.match(85);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n      case 53:\n        if (this.state.value === \"-\") {\n          this.next();\n          if (this.match(132)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n          if (this.match(133)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n          throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n            at: this.state.startLoc\n          });\n        }\n        throw this.unexpected();\n      case 132:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n      case 133:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n      case 88:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n      case 84:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n      case 78:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n      case 55:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n      case 87:\n        return this.flowParseTypeofType();\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(127)) {\n            return this.flowParseInterfaceType();\n          }\n          return this.flowIdentToTypeAnnotation(startLoc, node, this.parseIdentifier());\n        }\n    }\n    throw this.unexpected();\n  }\n  flowParsePostfixType() {\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n    return type;\n  }\n  flowParsePrefixType() {\n    const node = this.startNode();\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n    return param;\n  }\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(45);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n    while (this.eat(45)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(43);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n    while (this.eat(43)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 130 && this.state.value === \"_\") {\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n    return ident;\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  flowParseVariance() {\n    let variance = null;\n    if (this.match(53)) {\n      variance = this.startNode();\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n      this.next();\n      return this.finishNode(variance, \"Variance\");\n    }\n    return variance;\n  }\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  parseStatementLike(flags) {\n    if (this.state.strict && this.isContextual(127)) {\n      const lookahead = this.lookahead();\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(124)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    const stmt = super.parseStatementLike(flags);\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n    return stmt;\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(80) || tokenIsIdentifier(this.state.type) || this.match(68) || this.match(74) || this.match(82)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n    return super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 124) {\n      return !this.state.containsEsc;\n    }\n    return super.shouldParseExportDeclaration();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 124) {\n      return this.state.containsEsc;\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(124)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n      if (failed && valid.length > 1) {\n        this.raise(FlowErrors.AmbiguousConditionalArrow, {\n          at: state.startLoc\n        });\n      }\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n    while (stack.length !== 0) {\n      const node = stack.pop();\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n  finishArrowValidation(node) {\n    var _node$extra;\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingCommaLoc, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n    return result;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n    return node;\n  }\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n    super.assertModuleNodeAllowed(node);\n  }\n  parseExport(node, decorators) {\n    const decl = super.parseExport(node, decorators);\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n    return decl;\n  }\n  parseExportDeclaration(node) {\n    if (this.isContextual(128)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        super.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(129)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(127)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(124)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n  eatExportStar(node) {\n    if (super.eatExportStar(node)) return true;\n    if (this.isContextual(128) && this.lookahead().type === 55) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    const {\n      startLoc\n    } = this.state;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(startLoc);\n    }\n    return hasNamespace;\n  }\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n  parseClassMember(classBody, member, state) {\n    const {\n      startLoc\n    } = this.state;\n    if (this.isContextual(123)) {\n      if (super.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      member.declare = true;\n    }\n    super.parseClassMember(classBody, member, state);\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(FlowErrors.DeclareClassElement, {\n          at: startLoc\n        });\n      } else if (member.value) {\n        this.raise(FlowErrors.DeclareClassFieldInitializer, {\n          at: member.value\n        });\n      }\n    }\n  }\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(Errors.InvalidIdentifier, {\n        at: this.state.curPosition(),\n        identifierName: fullWord\n      });\n    }\n    this.finishToken(130, fullWord);\n  }\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 123 && next === 124) {\n      return this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(code === 62 ? 48 : 47, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(18, 2);\n      }\n      return this.finishOp(17, 1);\n    } else if (isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    if (!isLHS && node.type === \"AssignmentExpression\" && node.left.type === \"TypeCastExpression\") {\n      node.left = this.typeCastToParameter(node.left);\n    }\n    super.toAssignable(node, isLHS);\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n      const expr = exprList[i];\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(FlowErrors.TypeCastInPattern, {\n          at: expr.typeAnnotation\n        });\n      }\n    }\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n    return node;\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"TypeCastExpression\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassPrivateProperty(node);\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    if (method.params && isConstructor) {\n      const params = method.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    }\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && this.match(47)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    if (this.isContextual(111)) {\n      this.next();\n      const implemented = node.implements = [];\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n        if (this.match(47)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length > 0) {\n      const param = params[0];\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(FlowErrors.GetterMayNotHaveThisParam, {\n          at: param\n        });\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.SetterMayNotHaveThisParam, {\n          at: param\n        });\n      }\n    }\n  }\n  parsePropertyNamePrefixOperator(node) {\n    node.variance = this.flowParseVariance();\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.loc.start);\n    }\n    delete prop.variance;\n    let typeParameters;\n    if (this.match(47) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n    const result = super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    if (typeParameters) {\n      (result.value || result).typeParameters = typeParameters;\n    }\n    return result;\n  }\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(FlowErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n      if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n          at: param\n        });\n      }\n      param.optional = true;\n    }\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamAnnotationRequired, {\n        at: param\n      });\n    }\n    if (this.match(29) && this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamNoDefault, {\n        at: param\n      });\n    }\n    this.resetEndLocation(param);\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(FlowErrors.TypeBeforeInitializer, {\n        at: node.typeAnnotation\n      });\n    }\n    return node;\n  }\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n    return isMaybeDefaultImport(this.state.type);\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(FlowErrors.ImportReflectionHasImportType, {\n        at: node.specifiers[0].loc.start\n      });\n    }\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n    if (this.match(87)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(128)) {\n      kind = \"type\";\n    }\n    if (kind) {\n      const lh = this.lookahead();\n      const {\n        type\n      } = lh;\n      if (kind === \"type\" && type === 55) {\n        this.unexpected(null, lh.type);\n      }\n      if (isMaybeDefaultImport(type) || type === 5 || type === 55) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n    let isBinding = false;\n    if (this.isContextual(93) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(Errors.ImportBindingIsString, {\n            at: specifier,\n            importName: firstIdent.value\n          });\n        }\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n      if (this.eatContextual(93)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n        at: specifier\n      });\n    }\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.loc.start, true);\n    }\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.loc.start, true, true);\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n    if (kind !== \"get\" && kind !== \"set\" && this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.parseFunctionParams(node, allowModifiers);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n    let state = null;\n    let jsx;\n    if (this.hasPlugin(\"jsx\") && (this.match(140) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n    if ((_jsx = jsx) != null && _jsx.error || this.match(47)) {\n      var _jsx2, _jsx3;\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction, {\n              at: typeParameters\n            });\n          }\n          return arrow.node;\n        }\n        arrowExpression = arrow.node;\n      }\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n        at: typeParameters\n      });\n    }\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n    return super.parseArrow(node);\n  }\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node.params[i]\n        });\n      }\n    }\n    return super.checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged);\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startLoc.index) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.arguments = super.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(47)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n      throw arrow.error || result.error;\n    }\n    return super.parseSubscripts(base, startLoc, noCalls);\n  }\n  parseSubscript(base, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(47)) {\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = super.parseCallExpressionArguments(11, false);\n        if (subscriptState.optionalChainMember) {\n          node.optional = false;\n        }\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, subscriptState);\n  }\n  parseNewCallee(node) {\n    super.parseNewCallee(node);\n    let targs = null;\n    if (this.shouldParseTypes() && this.match(47)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n    node.typeArguments = targs;\n  }\n  parseAsyncArrowWithTypeParameters(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return super.parseArrowExpression(node, undefined, true);\n  }\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n    super.readToken_mult_modulo(code);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n    super.readToken_pipe_amp(code);\n  }\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n    if (this.state.hasFlowComment) {\n      this.raise(FlowErrors.UnterminatedFlowComment, {\n        at: this.state.curPosition()\n      });\n    }\n    return fileNode;\n  }\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        throw this.raise(FlowErrors.NestedFlowComment, {\n          at: this.state.startLoc\n        });\n      }\n      this.hasFlowCommentCompletion();\n      const commentSkip = this.skipFlowComment();\n      if (commentSkip) {\n        this.state.pos += commentSkip;\n        this.state.hasFlowComment = true;\n      }\n      return;\n    }\n    return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n  }\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n    return false;\n  }\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n  }\n  flowEnumErrorBooleanMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n      at: loc,\n      memberName,\n      enumName\n    });\n  }\n  flowEnumErrorInvalidMemberInitializer(loc, enumContext) {\n    return this.raise(!enumContext.explicitType ? FlowErrors.EnumInvalidMemberInitializerUnknownType : enumContext.explicitType === \"symbol\" ? FlowErrors.EnumInvalidMemberInitializerSymbolType : FlowErrors.EnumInvalidMemberInitializerPrimaryType, Object.assign({\n      at: loc\n    }, enumContext));\n  }\n  flowEnumErrorNumberMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n      at: loc,\n      enumName,\n      memberName\n    });\n  }\n  flowEnumErrorStringMemberInconsistentlyInitailized(node, {\n    enumName\n  }) {\n    this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n      at: node,\n      enumName\n    });\n  }\n  flowEnumMemberInit() {\n    const startLoc = this.state.startLoc;\n    const endOfInit = () => this.match(12) || this.match(8);\n    switch (this.state.type) {\n      case 132:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 131:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 85:\n      case 86:\n        {\n          const literal = this.parseBooleanLiteral(this.match(85));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      default:\n        return {\n          type: \"invalid\",\n          loc: startLoc\n        };\n    }\n  }\n  flowEnumMemberRaw() {\n    const loc = this.state.startLoc;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(29) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      loc\n    };\n    return {\n      id,\n      init\n    };\n  }\n  flowEnumCheckExplicitTypeMismatch(loc, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n    if (explicitType === null) {\n      return;\n    }\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(loc, context);\n    }\n  }\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n      if (memberName === \"\") {\n        continue;\n      }\n      if (/^[a-z]/.test(memberName)) {\n        this.raise(FlowErrors.EnumInvalidMemberName, {\n          at: id,\n          memberName,\n          suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n          enumName\n        });\n      }\n      if (seenNames.has(memberName)) {\n        this.raise(FlowErrors.EnumDuplicateMemberName, {\n          at: id,\n          memberName,\n          enumName\n        });\n      }\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.loc, context);\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n          enumName\n        });\n      }\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n          enumName\n        });\n      }\n      return initializedMembers;\n    }\n  }\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (!this.eatContextual(101)) return null;\n    if (!tokenIsIdentifier(this.state.type)) {\n      throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n        at: this.state.startLoc,\n        enumName\n      });\n    }\n    const {\n      value\n    } = this.state;\n    this.next();\n    if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n      this.raise(FlowErrors.EnumInvalidExplicitType, {\n        at: this.state.startLoc,\n        enumName,\n        invalidEnumType: value\n      });\n    }\n    return value;\n  }\n  flowEnumBody(node, id) {\n    const enumName = id.name;\n    const nameLoc = id.loc.start;\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), id);\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n    return false;\n  }\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n});\n\nconst entities = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({\n    openingTagName\n  }) => `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity\n  }) => `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\nvar jsx = (superClass => class JSXParserMixin extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(JsxErrors.UnterminatedJsxContent, {\n          at: this.state.startLoc\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              return this.finishToken(140);\n            }\n            return super.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(139, out);\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n        case 62:\n        case 125:\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n      }\n    }\n  }\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(131, out);\n  }\n  jsxReadEntity() {\n    const startPos = ++this.state.pos;\n    if (this.codePointAtPos(this.state.pos) === 35) {\n      ++this.state.pos;\n      let radix = 10;\n      if (this.codePointAtPos(this.state.pos) === 120) {\n        radix = 16;\n        ++this.state.pos;\n      }\n      const codePoint = this.readInt(radix, undefined, false, \"bail\");\n      if (codePoint !== null && this.codePointAtPos(this.state.pos) === 59) {\n        ++this.state.pos;\n        return String.fromCodePoint(codePoint);\n      }\n    } else {\n      let count = 0;\n      let semi = false;\n      while (count++ < 10 && this.state.pos < this.length && !(semi = this.codePointAtPos(this.state.pos) == 59)) {\n        ++this.state.pos;\n      }\n      if (semi) {\n        const desc = this.input.slice(startPos, this.state.pos);\n        const entity = entities[desc];\n        ++this.state.pos;\n        if (entity) {\n          return entity;\n        }\n      }\n    }\n    this.state.pos = startPos;\n    return \"&\";\n  }\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n    return this.finishToken(138, this.input.slice(start, this.state.pos));\n  }\n  jsxParseIdentifier() {\n    const node = this.startNode();\n    if (this.match(138)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n  jsxParseNamespacedName() {\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n  jsxParseElementName() {\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n    return node;\n  }\n  jsxParseAttributeValue() {\n    let node;\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.setContext(types.brace);\n        this.next();\n        node = this.jsxParseExpressionContainer(node, types.j_oTag);\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(JsxErrors.AttributeIsEmpty, {\n            at: node\n          });\n        }\n        return node;\n      case 140:\n      case 131:\n        return this.parseExprAtom();\n      default:\n        throw this.raise(JsxErrors.UnsupportedJsxValue, {\n          at: this.state.startLoc\n        });\n    }\n  }\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n  }\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.setContext(types.j_expr);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n  jsxParseExpressionContainer(node, previousContext) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n    this.setContext(previousContext);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n  jsxParseAttribute() {\n    const node = this.startNode();\n    if (this.match(5)) {\n      this.setContext(types.brace);\n      this.next();\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.setContext(types.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n  jsxParseOpeningElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(141)) {\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n    while (!this.match(56) && !this.match(141)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n    node.attributes = attributes;\n    node.selfClosing = this.eat(56);\n    this.expect(141);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n  jsxParseClosingElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(141)) {\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    this.expect(141);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n  jsxParseElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startLoc);\n    let closingElement = null;\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 140:\n            startLoc = this.state.startLoc;\n            this.next();\n            if (this.eat(56)) {\n              closingElement = this.jsxParseClosingElementAt(startLoc);\n              break contents;\n            }\n            children.push(this.jsxParseElementAt(startLoc));\n            break;\n          case 139:\n            children.push(this.parseExprAtom());\n            break;\n          case 5:\n            {\n              const node = this.startNode();\n              this.setContext(types.brace);\n              this.next();\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node, types.j_expr));\n              }\n              break;\n            }\n          default:\n            throw this.unexpected();\n        }\n      }\n      if (isFragment(openingElement) && !isFragment(closingElement) && closingElement !== null) {\n        this.raise(JsxErrors.MissingClosingTagFragment, {\n          at: closingElement\n        });\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(JsxErrors.MissingClosingTagElement, {\n          at: closingElement,\n          openingTagName: getQualifiedJSXName(openingElement.name)\n        });\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name)\n          });\n        }\n      }\n    }\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n    node.children = children;\n    if (this.match(47)) {\n      throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n        at: this.state.startLoc\n      });\n    }\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n  jsxParseElement() {\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startLoc);\n  }\n  setContext(newContext) {\n    const {\n      context\n    } = this.state;\n    context[context.length - 1] = newContext;\n  }\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(139)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(140)) {\n      return this.jsxParseElement();\n    } else if (this.match(47) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(140);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n  skipSpace() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) super.skipSpace();\n  }\n  getTokenFromCode(code) {\n    const context = this.curContext();\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(141);\n      }\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(140);\n    }\n    return super.getTokenFromCode(code);\n  }\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n    if (type === 56 && prevType === 140) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 140) {\n      context.push(types.j_oTag);\n    } else if (type === 141) {\n      const out = context[context.length - 1];\n      if (out === types.j_oTag && prevType === 56 || out === types.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n      } else {\n        this.setContext(types.j_expr);\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n}\nclass TypeScriptScopeHandler extends ScopeHandler {\n  constructor(...args) {\n    super(...args);\n    this.importsStack = [];\n  }\n  createScope(flags) {\n    this.importsStack.push(new Set());\n    return new TypeScriptScope(flags);\n  }\n  enter(flags) {\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n    super.enter(flags);\n  }\n  exit() {\n    const flags = super.exit();\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.pop();\n    }\n    return flags;\n  }\n  hasImport(name, allowShadow) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n  declareName(name, bindingType, loc) {\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    if (this.hasImport(name)) return;\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n    super.checkLocalExport(id);\n  }\n}\n\nconst getOwn$1 = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({\n    methodName\n  }) => `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName\n  }) => `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  AccessorCannotBeOptional: \"An 'accessor' property cannot be declared optional.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({\n    kind\n  }) => `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: ({\n    modifier\n  }) => `Accessibility modifier already seen.`,\n  DuplicateModifier: ({\n    modifier\n  }) => `Duplicate modifier: '${modifier}'.`,\n  EmptyHeritageClauseType: ({\n    token\n  }) => `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers\n  }) => `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier\n  }) => `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext: \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier\n  }) => `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers\n  }) => `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression: \"Invalid property access after an instantiation expression. \" + \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier\n  }) => `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName\n  }) => `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({\n    type\n  }) => `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`\n});\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\nfunction tsIsVarianceAnnotations(modifier) {\n  return modifier === \"in\" || modifier === \"out\";\n}\nvar typescript = (superClass => class TypeScriptParserMixin extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(136) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type) && this.state.type !== 58) {\n      return undefined;\n    }\n    const modifier = this.state.value;\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n    return undefined;\n  }\n  tsParseModifiers({\n    modified,\n    allowedModifiers,\n    disallowedModifiers,\n    stopOnStartOfClassStaticBlock,\n    errorTemplate = TSErrors.InvalidModifierOnTypeMember\n  }) {\n    const enforceOrder = (loc, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(TSErrors.InvalidModifiersOrder, {\n          at: loc,\n          orderedModifiers: [before, after]\n        });\n      }\n    };\n    const incompatible = (loc, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(TSErrors.IncompatibleModifiers, {\n          at: loc,\n          modifiers: [mod1, mod2]\n        });\n      }\n    };\n    for (;;) {\n      const {\n        startLoc\n      } = this.state;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(TSErrors.DuplicateAccessibilityModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, modifier, \"override\");\n          enforceOrder(startLoc, modifier, modifier, \"static\");\n          enforceOrder(startLoc, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else if (tsIsVarianceAnnotations(modifier)) {\n        if (modified[modifier]) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        }\n        modified[modifier] = true;\n        enforceOrder(startLoc, modifier, \"in\", \"out\");\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"static\", \"override\");\n          enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n          incompatible(startLoc, modifier, \"declare\", \"override\");\n          incompatible(startLoc, modifier, \"static\", \"abstract\");\n        }\n        modified[modifier] = true;\n      }\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(errorTemplate, {\n          at: startLoc,\n          modifier\n        });\n      }\n    }\n  }\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n      case \"HeritageClauseElement\":\n        return this.match(5);\n      case \"TupleElementTypes\":\n        return this.match(3);\n      case \"TypeParametersOrArguments\":\n        return this.match(48);\n    }\n    throw new Error(\"Unreachable\");\n  }\n  tsParseList(kind, parseElement) {\n    const result = [];\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n    return result;\n  }\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      trailingCommaPos = -1;\n      const element = parseElement();\n      if (element == null) {\n        return undefined;\n      }\n      result.push(element);\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStart;\n        continue;\n      }\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      if (expectSuccess) {\n        this.expect(12);\n      }\n      return undefined;\n    }\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n    return result;\n  }\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(47);\n      }\n    }\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(48);\n    }\n    return result;\n  }\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(83);\n    this.expect(10);\n    if (!this.match(131)) {\n      this.raise(TSErrors.UnsupportedImportTypeArgument, {\n        at: this.state.startLoc\n      });\n    }\n    node.argument = super.parseExprAtom();\n    this.expect(11);\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName();\n    }\n    if (this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSImportType\");\n  }\n  tsParseEntityName(allowReservedWords = true) {\n    let entity = this.parseIdentifier(allowReservedWords);\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n    return entity;\n  }\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName();\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(87);\n    if (this.match(83)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName();\n    }\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n  tsParseInOutModifiers(node) {\n    this.tsParseModifiers({\n      modified: node,\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n  }\n  tsParseNoneModifiers(node) {\n    this.tsParseModifiers({\n      modified: node,\n      allowedModifiers: [],\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    });\n  }\n  tsParseTypeParameter(parseModifiers = this.tsParseNoneModifiers.bind(this)) {\n    const node = this.startNode();\n    parseModifiers(node);\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(81);\n    node.default = this.tsEatThenParseType(29);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsTryParseTypeParameters(parseModifiers) {\n    if (this.match(47)) {\n      return this.tsParseTypeParameters(parseModifiers);\n    }\n  }\n  tsParseTypeParameters(parseModifiers) {\n    const node = this.startNode();\n    if (this.match(47) || this.match(140)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this, parseModifiers), false, true, refTrailingCommaPos);\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeParameters, {\n        at: node\n      });\n    }\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    const paramsKey = \"parameters\";\n    const returnTypeKey = \"typeAnnotation\";\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(10);\n    signature[paramsKey] = this.tsParseBindingListForSignature();\n    if (returnTokenRequired) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n  tsParseBindingListForSignature() {\n    return super.parseBindingList(11, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n          at: pattern,\n          type: pattern.type\n        });\n      }\n      return pattern;\n    });\n  }\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n    return false;\n  }\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n    if (this.match(10) || this.match(47)) {\n      if (readonly) {\n        this.raise(TSErrors.ReadonlyForMethodSignature, {\n          at: node\n        });\n      }\n      const method = nodeAny;\n      if (method.kind && this.match(47)) {\n        this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n          at: this.state.curPosition()\n        });\n      }\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n      const paramsKey = \"parameters\";\n      const returnTypeKey = \"typeAnnotation\";\n      if (method.kind === \"get\") {\n        if (method[paramsKey].length > 0) {\n          this.raise(Errors.BadGetterArity, {\n            at: this.state.curPosition()\n          });\n          if (this.isThisParam(method[paramsKey][0])) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method[paramsKey].length !== 1) {\n          this.raise(Errors.BadSetterArity, {\n            at: this.state.curPosition()\n          });\n        } else {\n          const firstParameter = method[paramsKey][0];\n          if (this.isThisParam(firstParameter)) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n              at: this.state.curPosition()\n            });\n          }\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n        if (method[returnTypeKey]) {\n          this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n            at: method[returnTypeKey]\n          });\n        }\n      } else {\n        method.kind = \"method\";\n      }\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n  tsParseTypeMember() {\n    const node = this.startNode();\n    if (this.match(10) || this.match(47)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n    if (this.match(77)) {\n      const id = this.startNode();\n      this.next();\n      if (this.match(10) || this.match(47)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n    this.tsParseModifiers({\n      modified: node,\n      allowedModifiers: [\"readonly\"],\n      disallowedModifiers: [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"]\n    });\n    const idx = this.tsTryParseIndexSignature(node);\n    if (idx) {\n      return idx;\n    }\n    super.parsePropertyName(node);\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      super.parsePropertyName(node);\n    }\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n  tsIsStartOfMappedType() {\n    this.next();\n    if (this.eat(53)) {\n      return this.isContextual(120);\n    }\n    if (this.isContextual(120)) {\n      this.next();\n    }\n    if (!this.match(0)) {\n      return false;\n    }\n    this.next();\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n    this.next();\n    return this.match(58);\n  }\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(58);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n    if (this.match(53)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(120);\n    } else if (this.eatContextual(120)) {\n      node.readonly = true;\n    }\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(93) ? this.tsParseType() : null;\n    this.expect(3);\n    if (this.match(53)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n      const {\n        type\n      } = elementNode;\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(TSErrors.OptionalTypeBeforeRequired, {\n          at: elementNode\n        });\n      }\n      seenOptionalElement || (seenOptionalElement = type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\");\n      let checkType = type;\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        checkType = elementNode.type;\n      }\n      const isLabeled = checkType === \"TSNamedTupleMember\";\n      (_labeledElements = labeledElements) != null ? _labeledElements : labeledElements = isLabeled;\n      if (labeledElements !== isLabeled) {\n        this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n          at: elementNode\n        });\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n  tsParseTupleElementType() {\n    const {\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let type = this.tsParseType();\n    const optional = this.eat(17);\n    const labeled = this.eat(14);\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(TSErrors.InvalidTupleMemberLabel, {\n          at: type\n        });\n        labeledNode.label = type;\n      }\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n    if (rest) {\n      const restNode = this.startNodeAt(startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n    return type;\n  }\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n    this.tsInAllowConditionalTypesContext(() => this.tsFillSignature(19, node));\n    return this.finishNode(node, type);\n  }\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n    node.literal = (() => {\n      switch (this.state.type) {\n        case 132:\n        case 133:\n        case 131:\n        case 85:\n        case 86:\n          return super.parseExprAtom();\n        default:\n          throw this.unexpected();\n      }\n    })();\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = super.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n    if (this.isContextual(114) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 131:\n      case 132:\n      case 133:\n      case 85:\n      case 86:\n        return this.tsParseLiteralTypeNode();\n      case 53:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n          if (nextToken.type !== 132 && nextToken.type !== 133) {\n            throw this.unexpected();\n          }\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n        break;\n      case 78:\n        return this.tsParseThisTypeOrThisTypePredicate();\n      case 87:\n        return this.tsParseTypeQuery();\n      case 83:\n        return this.tsParseImportType();\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n      case 0:\n        return this.tsParseTupleType();\n      case 10:\n        return this.tsParseParenthesizedType();\n      case 25:\n      case 24:\n        return this.tsParseTemplateLiteralType();\n      default:\n        {\n          const {\n            type\n          } = this.state;\n          if (tokenIsIdentifier(type) || type === 88 || type === 84) {\n            const nodeType = type === 88 ? \"TSVoidKeyword\" : type === 84 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n    throw this.unexpected();\n  }\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n    return type;\n  }\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n      default:\n        this.raise(TSErrors.UnexpectedReadonly, {\n          at: node\n        });\n    }\n  }\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(113);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    typeParameter.constraint = this.tsTryParse(() => this.tsParseConstraintForInferType());\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n  tsParseConstraintForInferType() {\n    if (this.eat(81)) {\n      const constraint = this.tsInDisallowConditionalTypesContext(() => this.tsParseType());\n      if (this.state.inDisallowConditionalTypesContext || !this.match(17)) {\n        return constraint;\n      }\n    }\n  }\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(113) ? this.tsParseInferType() : this.tsInAllowConditionalTypesContext(() => this.tsParseArrayTypeOrHigher());\n  }\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 45);\n  }\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 43);\n  }\n  tsIsStartOfFunctionType() {\n    if (this.match(47)) {\n      return true;\n    }\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n      this.next();\n      return true;\n    }\n    if (this.match(5)) {\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        this.parseObjectLike(8, true);\n        return errors.length === previousErrorCount;\n      } catch (_unused) {\n        return false;\n      }\n    }\n    if (this.match(0)) {\n      this.next();\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        super.parseBindingList(3, 93, true);\n        return errors.length === previousErrorCount;\n      } catch (_unused2) {\n        return false;\n      }\n    }\n    return false;\n  }\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\n        return true;\n      }\n      if (this.match(11)) {\n        this.next();\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n      if (asserts && this.match(78)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\n  }\n  tsTryParseTypeAnnotation() {\n    return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\n  }\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n    if (this.isContextual(114) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 107) {\n      return false;\n    }\n    const containsEsc = this.state.containsEsc;\n    this.next();\n    if (!tokenIsIdentifier(this.state.type) && !this.match(78)) {\n      return false;\n    }\n    if (containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.lastTokStartLoc,\n        reservedWord: \"asserts\"\n      });\n    }\n    return true;\n  }\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n    if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81)) {\n      return type;\n    }\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsInDisallowConditionalTypesContext(() => this.tsParseNonConditionalType());\n    this.expect(17);\n    node.trueType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    this.expect(14);\n    node.falseType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n  isAbstractConstructorSignature() {\n    return this.isContextual(122) && this.lookahead().type === 77;\n  }\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n    if (this.match(77)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n    return this.tsParseUnionTypeOrHigher();\n  }\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedTypeAssertion, {\n        at: this.state.startLoc\n      });\n    }\n    const node = this.startNode();\n    node.typeAnnotation = this.tsInType(() => {\n      this.next();\n      return this.match(75) ? this.tsParseTypeReference() : this.tsParseType();\n    });\n    this.expect(48);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n  tsParseHeritageClause(token) {\n    const originalStartLoc = this.state.startLoc;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", () => {\n      const node = this.startNode();\n      node.expression = this.tsParseEntityName();\n      if (this.match(47)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    });\n    if (!delimitedList.length) {\n      this.raise(TSErrors.EmptyHeritageClauseType, {\n        at: originalStartLoc,\n        token\n      });\n    }\n    return delimitedList;\n  }\n  tsParseInterfaceDeclaration(node, properties = {}) {\n    if (this.hasFollowingLineBreak()) return null;\n    this.expectContextual(127);\n    if (properties.declare) node.declare = true;\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(TSErrors.MissingInterfaceName, {\n        at: this.state.startLoc\n      });\n    }\n    node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers.bind(this));\n    if (this.eat(81)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, BIND_TS_TYPE);\n    node.typeAnnotation = this.tsInType(() => {\n      node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers.bind(this));\n      this.expect(29);\n      if (this.isContextual(112) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n  tsInDisallowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsInAllowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = false;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(131) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(true);\n    if (this.eat(29)) {\n      node.initializer = super.parseMaybeAssignAllowIn();\n    }\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n  tsParseEnumDeclaration(node, properties = {}) {\n    if (properties.const) node.const = true;\n    if (properties.declare) node.declare = true;\n    this.expectContextual(124);\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(5);\n    super.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n    if (!nested) {\n      this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n    }\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(110)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(131)) {\n      node.id = super.parseStringLiteral(this.state.value);\n    } else {\n      this.unexpected();\n    }\n    if (this.match(5)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, BIND_FLAGS_TS_IMPORT);\n    this.expect(29);\n    const moduleReference = this.tsParseModuleReference();\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(TSErrors.ImportAliasHasImportType, {\n        at: moduleReference\n      });\n    }\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n  tsIsExternalModuleReference() {\n    return this.isContextual(117) && this.lookaheadCharCode() === 40;\n  }\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(117);\n    this.expect(10);\n    if (!this.match(131)) {\n      throw this.unexpected();\n    }\n    node.expression = super.parseExprAtom();\n    this.expect(11);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n    let starttype = this.state.type;\n    let kind;\n    if (this.isContextual(99)) {\n      starttype = 74;\n      kind = \"let\";\n    }\n    return this.tsInAmbientContext(() => {\n      if (starttype === 68) {\n        nany.declare = true;\n        return super.parseFunctionStatement(nany, false, false);\n      }\n      if (starttype === 80) {\n        nany.declare = true;\n        return this.parseClass(nany, true, false);\n      }\n      if (starttype === 124) {\n        return this.tsParseEnumDeclaration(nany, {\n          declare: true\n        });\n      }\n      if (starttype === 110) {\n        return this.tsParseAmbientExternalModuleDeclaration(nany);\n      }\n      if (starttype === 75 || starttype === 74) {\n        if (!this.match(75) || !this.isLookaheadContextual(\"enum\")) {\n          nany.declare = true;\n          return this.parseVarStatement(nany, kind || this.state.value, true);\n        }\n        this.expect(75);\n        return this.tsParseEnumDeclaration(nany, {\n          const: true,\n          declare: true\n        });\n      }\n      if (starttype === 127) {\n        const result = this.tsParseInterfaceDeclaration(nany, {\n          declare: true\n        });\n        if (result) return result;\n      }\n      if (tokenIsIdentifier(starttype)) {\n        return this.tsParseDeclaration(nany, this.state.value, true, null);\n      }\n    });\n  }\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true, null);\n  }\n  tsParseExpressionStatement(node, expr, decorators) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n        break;\n      default:\n        return this.tsParseDeclaration(node, expr.name, false, decorators);\n    }\n  }\n  tsParseDeclaration(node, value, next, decorators) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(80) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node, decorators);\n        }\n        break;\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(131)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n        break;\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n        break;\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n        break;\n    }\n  }\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n    return !this.isLineTerminator();\n  }\n  tsTryParseGenericAsyncArrowFunction(startLoc) {\n    if (!this.match(47)) {\n      return undefined;\n    }\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    if (!res) {\n      return undefined;\n    }\n    return super.parseArrowExpression(res, null, true);\n  }\n  tsParseTypeArgumentsInExpression() {\n    if (this.reScan_lt() !== 47) {\n      return undefined;\n    }\n    return this.tsParseTypeArguments();\n  }\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(47);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeArguments, {\n        at: node\n      });\n    }\n    this.expect(48);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers({\n        modified,\n        allowedModifiers: [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]\n      });\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(TSErrors.UnexpectedParameterModifier, {\n          at: startLoc\n        });\n      }\n    }\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startLoc);\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(TSErrors.UnsupportedParameterPropertyKind, {\n          at: pp\n        });\n      }\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  isSimpleParameter(node) {\n    return node.type === \"TSParameterProperty\" && super.isSimpleParameter(node.parameter) || super.isSimpleParameter(node);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      return this.finishNode(node, bodilessType);\n    }\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(TSErrors.DeclareFunctionHasImplementation, {\n        at: node\n      });\n      if (node.declare) {\n        return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n      }\n    }\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(node);\n    }\n  }\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(TSErrors.UnexpectedTypeAnnotation, {\n          at: node.typeAnnotation\n        });\n      }\n    });\n  }\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(35)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n    let isOptionalCall = false;\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n    if (this.match(47) || this.match(51)) {\n      let missingParenErrorLoc;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startLoc);\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n        if (!typeArguments) return;\n        if (isOptionalCall && !this.match(10)) {\n          missingParenErrorLoc = this.state.curPosition();\n          return;\n        }\n        if (tokenIsTemplate(this.state.type)) {\n          const result = super.parseTaggedTemplateExpression(base, startLoc, state);\n          result.typeParameters = typeArguments;\n          return result;\n        }\n        if (!noCalls && this.eat(10)) {\n          const node = this.startNodeAt(startLoc);\n          node.callee = base;\n          node.arguments = this.parseCallExpressionArguments(11, false);\n          this.tsCheckForInvalidTypeCasts(node.arguments);\n          node.typeParameters = typeArguments;\n          if (state.optionalChainMember) {\n            node.optional = isOptionalCall;\n          }\n          return this.finishCallExpression(node, state.optionalChainMember);\n        }\n        const tokenType = this.state.type;\n        if (tokenType === 48 || tokenType === 52 || tokenType !== 10 && tokenCanStartExpression(tokenType) && !this.hasPrecedingLineBreak()) {\n          return;\n        }\n        const node = this.startNodeAt(startLoc);\n        node.expression = base;\n        node.typeParameters = typeArguments;\n        return this.finishNode(node, \"TSInstantiationExpression\");\n      });\n      if (missingParenErrorLoc) {\n        this.unexpected(missingParenErrorLoc, 10);\n      }\n      if (result) {\n        if (result.type === \"TSInstantiationExpression\" && (this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40)) {\n          this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression, {\n            at: this.state.startLoc\n          });\n        }\n        return result;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, state);\n  }\n  parseNewCallee(node) {\n    var _callee$extra;\n    super.parseNewCallee(node);\n    const {\n      callee\n    } = node;\n    if (callee.type === \"TSInstantiationExpression\" && !((_callee$extra = callee.extra) != null && _callee$extra.parenthesized)) {\n      node.typeParameters = callee.typeParameters;\n      node.callee = callee.expression;\n    }\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    let isSatisfies;\n    if (tokenOperatorPrecedence(58) > minPrec && !this.hasPrecedingLineBreak() && (this.isContextual(93) || (isSatisfies = this.isContextual(118)))) {\n      const node = this.startNodeAt(leftStartLoc);\n      node.expression = left;\n      node.typeAnnotation = this.tsInType(() => {\n        this.next();\n        if (this.match(75)) {\n          if (isSatisfies) {\n            this.raise(Errors.UnexpectedKeyword, {\n              at: this.state.startLoc,\n              keyword: \"const\"\n            });\n          }\n          return this.tsParseTypeReference();\n        }\n        return this.tsParseType();\n      });\n      this.finishNode(node, isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartLoc, minPrec);\n    }\n    return super.parseExprOp(left, leftStartLoc, minPrec);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (!this.state.isAmbientContext) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(TSErrors.ImportReflectionHasImportType, {\n        at: node.specifiers[0].loc.start\n      });\n    }\n  }\n  checkDuplicateExports() {}\n  parseImport(node) {\n    node.importKind = \"value\";\n    if (tokenIsIdentifier(this.state.type) || this.match(55) || this.match(5)) {\n      let ahead = this.lookahead();\n      if (this.isContextual(128) && ahead.type !== 12 && ahead.type !== 97 && ahead.type !== 29) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 29) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n    const importNode = super.parseImport(node);\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n        at: importNode\n      });\n    }\n    return importNode;\n  }\n  parseExport(node, decorators) {\n    if (this.match(83)) {\n      this.next();\n      if (this.isContextual(128) && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(29)) {\n      const assign = node;\n      assign.expression = super.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(93)) {\n      const decl = node;\n      this.expectContextual(126);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(128) && this.lookahead().type === 5) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n      return super.parseExport(node, decorators);\n    }\n  }\n  isAbstractClass() {\n    return this.isContextual(122) && this.lookahead().type === 80;\n  }\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      return this.parseClass(cls, true, true);\n    }\n    if (this.match(127)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    const {\n      isAmbientContext\n    } = this.state;\n    const declaration = super.parseVarStatement(node, kind, allowMissingInitializer || isAmbientContext);\n    if (!isAmbientContext) return declaration;\n    for (const {\n      id,\n      init\n    } of declaration.declarations) {\n      if (!init) continue;\n      if (kind !== \"const\" || !!id.typeAnnotation) {\n        this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n          at: init\n        });\n      } else if (!isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))) {\n        this.raise(TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference, {\n          at: init\n        });\n      }\n    }\n    return declaration;\n  }\n  parseStatementContent(flags, decorators) {\n    if (this.match(75) && this.isLookaheadContextual(\"enum\")) {\n      const node = this.startNode();\n      this.expect(75);\n      return this.tsParseEnumDeclaration(node, {\n        const: true\n      });\n    }\n    if (this.isContextual(124)) {\n      return this.tsParseEnumDeclaration(this.startNode());\n    }\n    if (this.isContextual(127)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseStatementContent(flags, decorators);\n  }\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n      return !!member[modifier];\n    });\n  }\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(104) && this.lookaheadCharCode() === 123;\n  }\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers({\n      modified: member,\n      allowedModifiers: modifiers,\n      disallowedModifiers: [\"in\", \"out\"],\n      stopOnStartOfClassStaticBlock: true,\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    });\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n            at: this.state.curPosition()\n          });\n        }\n        super.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n    if (idx) {\n      classBody.body.push(idx);\n      if (member.abstract) {\n        this.raise(TSErrors.IndexSignatureHasAbstract, {\n          at: member\n        });\n      }\n      if (member.accessibility) {\n        this.raise(TSErrors.IndexSignatureHasAccessibility, {\n          at: member,\n          modifier: member.accessibility\n        });\n      }\n      if (member.declare) {\n        this.raise(TSErrors.IndexSignatureHasDeclare, {\n          at: member\n        });\n      }\n      if (member.override) {\n        this.raise(TSErrors.IndexSignatureHasOverride, {\n          at: member\n        });\n      }\n      return;\n    }\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n        at: member\n      });\n    }\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(TSErrors.OverrideNotInSubClass, {\n          at: member\n        });\n      }\n    }\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasReadonly, {\n        at: methodOrProp\n      });\n    }\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasDeclare, {\n        at: methodOrProp\n      });\n    }\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr, decorators) : undefined;\n    return decl || super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startLoc, refExpressionErrors);\n    }\n    const result = this.tryParse(() => super.parseConditional(expr, startLoc));\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n      return expr;\n    }\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n    return node;\n  }\n  parseExportDeclaration(node) {\n    if (!this.state.isAmbientContext && this.isContextual(123)) {\n      return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n    }\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(123);\n    if (isDeclare && (this.isContextual(123) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n        at: this.state.startLoc\n      });\n    }\n    const isIdentifier = tokenIsIdentifier(this.state.type);\n    const declaration = isIdentifier && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(node);\n    if (!declaration) return null;\n    if (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare) {\n      node.exportKind = \"type\";\n    }\n    if (isDeclare) {\n      this.resetStartLocation(declaration, startLoc);\n      declaration.declare = true;\n    }\n    return declaration;\n  }\n  parseClassId(node, isStatement, optionalId, bindingType) {\n    if ((!isStatement || optionalId) && this.isContextual(111)) {\n      return;\n    }\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers.bind(this));\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional) {\n      if (this.eat(35)) {\n        node.definite = true;\n      } else if (this.eat(17)) {\n        node.optional = true;\n      }\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (this.state.isAmbientContext && !(node.readonly && !node.typeAnnotation) && this.match(29)) {\n      this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n        at: this.state.startLoc\n      });\n    }\n    if (node.abstract && this.match(29)) {\n      const {\n        key\n      } = node;\n      this.raise(TSErrors.AbstractPropertyHasInitializer, {\n        at: this.state.startLoc,\n        propertyName: key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n      });\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(TSErrors.PrivateElementHasAbstract, {\n        at: node\n      });\n    }\n    if (node.accessibility) {\n      this.raise(TSErrors.PrivateElementHasAccessibility, {\n        at: node,\n        modifier: node.accessibility\n      });\n    }\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n  parseClassAccessorProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (node.optional) {\n      this.raise(TSErrors.AccessorCannotBeOptional, {\n        at: node\n      });\n    }\n    return super.parseClassAccessorProperty(node);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters && isConstructor) {\n      this.raise(TSErrors.ConstructorHasTypeParameters, {\n        at: typeParameters\n      });\n    }\n    const {\n      declare = false,\n      kind\n    } = method;\n    if (declare && (kind === \"get\" || kind === \"set\")) {\n      this.raise(TSErrors.DeclareAccessor, {\n        at: method,\n        kind\n      });\n    }\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && (this.match(47) || this.match(51))) {\n      node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n    }\n    if (this.eatContextual(111)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    return super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n  }\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (decl.id.type === \"Identifier\" && !this.hasPrecedingLineBreak() && this.eat(35)) {\n      decl.definite = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n    let state;\n    let jsx;\n    let typeCast;\n    if (this.hasPlugin(\"jsx\") && (this.match(140) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(47)) {\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n    if (!state || state === this.state) state = this.state.clone();\n    let typeParameters;\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n    if (node.params.length === 1 && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedArrowTypeParam, {\n        at: node\n      });\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    if (!this.hasPlugin(\"jsx\") && this.match(47)) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n    }\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n    return super.parseArrow(node);\n  }\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(TSErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n      param.optional = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n      case \"TSParameterProperty\":\n        return true;\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.toAssignableParenthesizedExpression(node, isLHS);\n        break;\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        if (isLHS) {\n          this.expressionScope.recordArrowParameterBindingError(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        } else {\n          this.raise(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        }\n        this.toAssignable(node.expression, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n          node.left = this.typeCastToParameter(node.left);\n        }\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isLHS);\n        break;\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSTypeAssertion\":\n      case \"TSNonNullExpression\":\n        this.checkToRestConversion(node.expression, false);\n        break;\n      default:\n        super.checkToRestConversion(node, allowPattern);\n    }\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn$1({\n      TSTypeCastExpression: true,\n      TSParameterProperty: \"parameter\",\n      TSNonNullExpression: \"expression\",\n      TSAsExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSSatisfiesExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSTypeAssertion: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true]\n    }, type) || super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsParseTypeArgumentsInExpression();\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n      this.unexpected(null, 10);\n    }\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n      return false;\n    } else {\n      return super.checkCommaAfterRest(close);\n    }\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(35) || this.match(14) || super.isClassProperty();\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(TSErrors.TypeAnnotationAfterAssign, {\n        at: node.typeAnnotation\n      });\n    }\n    return node;\n  }\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        return this.finishOp(48, 1);\n      }\n      if (code === 60) {\n        return this.finishOp(47, 1);\n      }\n    }\n    return super.getTokenFromCode(code);\n  }\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n    if (type === 47) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 48) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n  reScan_lt() {\n    const {\n      type\n    } = this.state;\n    if (type === 51) {\n      this.state.pos -= 2;\n      this.finishOp(47, 1);\n      return 47;\n    }\n    return type;\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TSTypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n    return super.shouldParseArrow(params);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArgumentsInExpression());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n    return param;\n  }\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n  parseClass(node, isStatement, optionalId) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n    try {\n      return super.parseClass(node, isStatement, optionalId);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n  tsParseAbstractDeclaration(node, decorators) {\n    if (this.match(80)) {\n      node.abstract = true;\n      return this.maybeTakeDecorators(decorators, this.parseClass(node, true, false));\n    } else if (this.isContextual(127)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n          at: node\n        });\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 80);\n    }\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope) {\n    const method = super.parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(TSErrors.AbstractMethodHasImplementation, {\n          at: method,\n          methodName: key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n        });\n      }\n    }\n    return method;\n  }\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.parse();\n  }\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.getExpression();\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\n  }\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const loc = leftOfAs.loc.start;\n    if (this.isContextual(93)) {\n      const firstAs = this.parseIdentifier();\n      if (this.isContextual(93)) {\n        const secondAs = this.parseIdentifier();\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n      if (isImport) {\n        leftOfAs = this.parseIdentifier(true);\n        if (!this.isContextual(93)) {\n          this.checkReservedWord(leftOfAs.name, leftOfAs.loc.start, true, true);\n        }\n      } else {\n        leftOfAs = this.parseModuleExportName();\n      }\n    }\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports, {\n        at: loc\n      });\n    }\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n    if (canParseAsKeyword && this.eatContextual(93)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n    if (isImport) {\n      this.checkIdentifier(node[rightOfAsKey], hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\n    }\n  }\n});\nfunction isPossiblyLiteralEnum(expression) {\n  if (expression.type !== \"MemberExpression\") return false;\n  const {\n    computed,\n    property\n  } = expression;\n  if (computed && property.type !== \"StringLiteral\" && (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)) {\n    return false;\n  }\n  return isUncomputedMemberExpressionChain(expression.object);\n}\nfunction isValidAmbientConstInitializer(expression, estree) {\n  var _expression$extra;\n  const {\n    type\n  } = expression;\n  if ((_expression$extra = expression.extra) != null && _expression$extra.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const {\n        value\n      } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\nfunction isNumber(expression, estree) {\n  if (estree) {\n    return expression.type === \"Literal\" && (typeof expression.value === \"number\" || \"bigint\" in expression);\n  } else {\n    return expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\";\n  }\n}\nfunction isNegativeNumber(expression, estree) {\n  if (expression.type === \"UnaryExpression\") {\n    const {\n      operator,\n      argument\n    } = expression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUncomputedMemberExpressionChain(expression) {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\"\n});\nvar placeholders = (superClass => class PlaceholdersParserMixin extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(142)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace();\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace();\n      this.expect(142);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(142, 2);\n    }\n    return super.getTokenFromCode(code);\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(refExpressionErrors);\n  }\n  parseIdentifier(liberal) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word !== undefined) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"Placeholder\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  toAssignable(node, isLHS) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (super.chStartsBindingIdentifier(ch, pos)) {\n      return true;\n    }\n    const nextToken = this.lookahead();\n    if (nextToken.type === 142) {\n      return true;\n    }\n    return false;\n  }\n  verifyBreakContinue(node, isBreak) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(node, isBreak);\n  }\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(node, expr);\n    }\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = super.parseStatementOrFunctionDeclaration(false);\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n  parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse) {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse);\n  }\n  parseFunctionId(requireId) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId);\n  }\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (placeholder) {\n      if (this.match(81) || this.match(142) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n          at: this.state.startLoc\n        });\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n    super.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || super.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n  parseExport(node, decorators) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(node, decorators);\n    if (!this.isContextual(97) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node, decorators);\n  }\n  isExportDefaultSpecifier() {\n    if (this.match(65)) {\n      const next = this.nextTokenStart();\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(142), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n    return super.maybeParseExportDefaultSpecifier(node);\n  }\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(node);\n    node.specifiers = [];\n    if (!this.isContextual(97) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    node.specifiers.push(this.finishNode(specifier, \"ImportDefaultSpecifier\"));\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n    this.expectContextual(97);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource();\n  }\n  assertNoSpace() {\n    if (this.state.start > this.state.lastTokEndLoc.index) {\n      this.raise(PlaceholderErrors.UnexpectedSpace, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n  }\n});\n\nvar v8intrinsic = (superClass => class V8IntrinsicMixin extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(54)) {\n      const v8IntrinsicStartLoc = this.state.startLoc;\n      const node = this.startNode();\n      this.next();\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName();\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n      this.unexpected(v8IntrinsicStartLoc);\n    }\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors);\n  }\n});\n\nfunction hasPlugin(plugins, expectedConfig) {\n  const [expectedName, expectedOptions] = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n  const expectedKeys = Object.keys(expectedOptions);\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return plugin[1][option];\n  }\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n    if (decoratorsBeforeExport != null && typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n    const allowCallParenthesized = getPluginOption(plugins, \"decorators\", \"allowCallParenthesized\");\n    if (allowCallParenthesized != null && typeof allowCallParenthesized !== \"boolean\") {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\n      syntaxType: \"hash\"\n    }]);\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n  if (hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n\nconst getOwn = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, {\n          at: node\n        });\n      }\n    }\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingCommaLoc) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc\n            });\n          }\n        }\n        break;\n      case \"ObjectProperty\":\n        {\n          const {\n            key,\n            value\n          } = node;\n          if (this.isPrivateName(key)) {\n            this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n          }\n          this.toAssignable(value, isLHS);\n          break;\n        }\n      case \"SpreadElement\":\n        {\n          throw new Error(\"Internal @babel/parser error (this is a bug, please report it).\" + \" SpreadElement should be converted by .toAssignable's caller.\");\n        }\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingCommaLoc, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, {\n            at: node.left.loc.end\n          });\n        }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(prop.kind === \"get\" || prop.kind === \"set\" ? Errors.PatternHasAccessor : Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, false);\n      this.toAssignable(arg, isLHS);\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, {\n          at: prop\n        });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    const end = exprList.length - 1;\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, {\n            at: elt\n          });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, {\n            at: trailingCommaLoc\n          });\n        }\n      }\n    }\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n      default:\n        return false;\n    }\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n  parseSpread(refExpressionErrors) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n    return this.parseIdentifier();\n  }\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(26) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc\n          });\n        }\n        while (this.match(26)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n  parseBindingRestProperty(prop) {\n    this.next();\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(125);\n    return this.finishNode(prop, \"RestElement\");\n  }\n  parseBindingProperty() {\n    const prop = this.startNode();\n    const {\n      type,\n      startLoc\n    } = this.state;\n    if (type === 21) {\n      return this.parseBindingRestProperty(prop);\n    } else if (type === 136) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    return this.parseObjPropValue(prop, startLoc, false, false, true, false);\n  }\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    var _startLoc, _left;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(29)) return left;\n    const node = this.startNodeAt(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn({\n      AssignmentPattern: \"left\",\n      RestElement: \"argument\",\n      ObjectProperty: \"value\",\n      ParenthesizedExpression: \"expression\",\n      ArrayPattern: \"elements\",\n      ObjectPattern: \"properties\"\n    }, type);\n  }\n  checkLVal(expression, {\n    in: ancestor,\n    binding = BIND_NONE,\n    checkClashes = false,\n    strictModeChanged = false,\n    hasParenthesizedAncestor = false\n  }) {\n    var _expression$extra;\n    const type = expression.type;\n    if (this.isObjectMethod(expression)) return;\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, {\n          at: expression\n        });\n      }\n      return;\n    }\n    if (type === \"Identifier\") {\n      this.checkIdentifier(expression, binding, strictModeChanged);\n      const {\n        name\n      } = expression;\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, {\n            at: expression\n          });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n      return;\n    }\n    const validity = this.isValidLVal(type, !(hasParenthesizedAncestor || (_expression$extra = expression.extra) != null && _expression$extra.parenthesized) && ancestor.type === \"AssignmentExpression\", binding);\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass = binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor\n      });\n      return;\n    }\n    const [key, isParenthesizedExpression] = Array.isArray(validity) ? validity : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor = type === \"ArrayPattern\" || type === \"ObjectPattern\" || type === \"ParenthesizedExpression\" ? {\n      type\n    } : ancestor;\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression\n        });\n      }\n    }\n  }\n  checkIdentifier(at, bindingType, strictModeChanged = false) {\n    if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(at.name, this.inModule) : isStrictBindOnlyReservedWord(at.name))) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, {\n          at,\n          referenceName: at.name\n        });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name\n        });\n      }\n    }\n    if (bindingType & BIND_FLAGS_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, {\n        at\n      });\n    }\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n  declareNameFromIdentifier(identifier, binding) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, {\n          at: node\n        });\n    }\n  }\n  checkCommaAfterRest(close) {\n    if (!this.match(12)) {\n      return false;\n    }\n    this.raise(this.lookaheadCharCode() === close ? Errors.RestTrailingComma : Errors.ElementAfterRest, {\n      at: this.state.startLoc\n    });\n    return true;\n  }\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, {\n          at: key\n        });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, {\n            at: key\n          });\n        }\n      }\n      protoRef.used = true;\n    }\n  }\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(137)) {\n      this.unexpected();\n    }\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n  parseExpressionBase(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(12)) {\n      const node = this.startNodeAt(startLoc);\n      node.expressions = [expr];\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$loc;\n    refExpressionErrors.optionalParametersLoc = (_resultError$loc = resultError == null ? void 0 : resultError.loc) != null ? _resultError$loc : this.state.startLoc;\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(106)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const {\n      type\n    } = this.state;\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      if (this.match(29)) {\n        this.toAssignable(left, true);\n        node.left = left;\n        const startIndex = startLoc.index;\n        if (refExpressionErrors.doubleProtoLoc != null && refExpressionErrors.doubleProtoLoc.index >= startIndex) {\n          refExpressionErrors.doubleProtoLoc = null;\n        }\n        if (refExpressionErrors.shorthandAssignLoc != null && refExpressionErrors.shorthandAssignLoc.index >= startIndex) {\n          refExpressionErrors.shorthandAssignLoc = null;\n        }\n        if (refExpressionErrors.privateKeyLoc != null && refExpressionErrors.privateKeyLoc.index >= startIndex) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null;\n        }\n      } else {\n        node.left = left;\n      }\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\")\n      });\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    return left;\n  }\n  parseMaybeConditional(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(136) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n  parseExprOps(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      if (minPrec >= tokenOperatorPrecedence(58) || !this.prodParam.hasIn || !this.match(58)) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value\n        });\n      }\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(58))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === 39) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt(leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 41 || op === 42;\n        const coalesce = op === 40;\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(42);\n        }\n        this.next();\n        if (op === 39 && this.hasPlugin([\"pipelineOperator\", {\n          proposal: \"minimal\"\n        }])) {\n          if (this.state.type === 96 && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc\n            });\n          }\n        }\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n        if (coalesce && (nextOp === 41 || nextOp === 42) || logical && nextOp === 40) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n  parseExprOpRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case 39:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(106)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startLoc);\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n  parseExprOpBaseRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n  parseHackPipeBody() {\n    var _body$extra;\n    const {\n      startLoc\n    } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(body.type);\n    if (requiredParentheses && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        type: body.type\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipeTopicUnused, {\n        at: startLoc\n      });\n    }\n    return body;\n  }\n  checkExponentialAfterUnary(node) {\n    if (this.match(57)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument\n      });\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(96);\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(34);\n    const node = this.startNode();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n      if (this.match(72)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(89);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, {\n            at: node\n          });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, {\n            at: node\n          });\n        }\n      }\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(54);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, {\n          at: startLoc\n        });\n        return this.parseAwait(startLoc);\n      }\n    }\n    return expr;\n  }\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      const updateExpressionNode = node;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\")\n      });\n      return node;\n    }\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: expr = this.finishNode(node, \"UpdateExpression\")\n      });\n    }\n    return expr;\n  }\n  parseExprSubscripts(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseSubscripts(expr, startLoc);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const {\n      type\n    } = this.state;\n    if (!noCalls && type === 15) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n    let optional = false;\n    if (type === 18) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n  parseMember(base, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(3);\n    } else if (this.match(136)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, {\n          at: startLoc\n        });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n  parseBind(base, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    this.next();\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startLoc, noCalls);\n  }\n  parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    const node = this.startNodeAt(startLoc);\n    node.callee = base;\n    const {\n      maybeAsyncArrow,\n      optionalChainMember\n    } = state;\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n    if (optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n    let finishedNode = this.finishCallExpression(node, optionalChainMember);\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startLoc), finishedNode);\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return finishedNode;\n  }\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n  parseTaggedTemplateExpression(base, startLoc, state) {\n    const node = this.startNodeAt(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, {\n        at: startLoc\n      });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEndLoc.index === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount: this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? 2 : 1\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, {\n              at: arg\n            });\n          }\n        }\n      }\n    }\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingCommaLoc);\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node;\n  }\n  parseNoCallExpr() {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    let decorators = null;\n    const {\n      type\n    } = this.state;\n    switch (type) {\n      case 79:\n        return this.parseSuper();\n      case 83:\n        node = this.startNode();\n        this.next();\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n        if (!this.match(10)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case 78:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n      case 90:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n      case 56:\n      case 31:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n      case 132:\n        return this.parseNumericLiteral(this.state.value);\n      case 133:\n        return this.parseBigIntLiteral(this.state.value);\n      case 134:\n        return this.parseDecimalLiteral(this.state.value);\n      case 131:\n        return this.parseStringLiteral(this.state.value);\n      case 84:\n        return this.parseNullLiteral();\n      case 85:\n        return this.parseBooleanLiteral(true);\n      case 86:\n        return this.parseBooleanLiteral(false);\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n        }\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n        }\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n      case 68:\n        return this.parseFunctionOrFunctionSent();\n      case 26:\n        decorators = this.parseDecorators();\n      case 80:\n        return this.parseClass(this.maybeTakeDecorators(decorators, this.startNode()), false);\n      case 77:\n        return this.parseNewOrNewTarget();\n      case 25:\n      case 24:\n        return this.parseTemplate(false);\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(Errors.UnsupportedBind, {\n              at: callee\n            });\n          }\n        }\n      case 136:\n        {\n          this.raise(Errors.PrivateInExpectedIn, {\n            at: this.state.startLoc,\n            identifierName: this.state.value\n          });\n          return this.parsePrivateName();\n        }\n      case 33:\n        {\n          return this.parseTopicReferenceThenEqualsSign(54, \"%\");\n        }\n      case 32:\n        {\n          return this.parseTopicReferenceThenEqualsSign(44, \"^\");\n        }\n      case 37:\n      case 38:\n        {\n          return this.parseTopicReference(\"hack\");\n        }\n      case 44:\n      case 54:\n      case 27:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          } else {\n            throw this.unexpected();\n          }\n        }\n      case 47:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            break;\n          } else {\n            throw this.unexpected();\n          }\n        }\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(125) && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n            if (type === 68) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(this.startNodeAtNode(id));\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 90) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n  finishTopicReference(node, startLoc, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)) {\n      const nodeType = pipeProposal === \"smart\" ? \"PipelinePrimaryTopicReference\" : \"TopicReference\";\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(pipeProposal === \"smart\" ? Errors.PrimaryTopicNotAllowed : Errors.PipeTopicUnbound, {\n          at: startLoc\n        });\n      }\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType)\n      });\n    }\n  }\n  testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          return this.hasPlugin([\"pipelineOperator\", {\n            topicToken: tokenLabelName(tokenType)\n          }]);\n        }\n      case \"smart\":\n        return tokenType === 27;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, {\n          at: startLoc\n        });\n    }\n  }\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition()\n      });\n    }\n    this.expect(19);\n    return this.parseArrowExpression(node, params, true);\n  }\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.SuperNotAllowed, {\n        at: node\n      });\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.UnexpectedSuper, {\n        at: node\n      });\n    }\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(Errors.UnsupportedSuper, {\n        at: node\n      });\n    }\n    return this.finishNode(node, \"Super\");\n  }\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(createPositionWithColumnOffset(this.state.startLoc, 1));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      if (this.match(102)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName\n      });\n    }\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n    if (this.isContextual(100)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, {\n          at: id\n        });\n      }\n      this.sawUnambiguousESM = true;\n    }\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParametersLoc === null ? null : refExpressionErrors.optionalParametersLoc);\n        if (this.match(11)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n      if (this.match(21)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc));\n        if (!this.checkCommaAfterRest(41)) {\n          break;\n        }\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startLoc);\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n    return this.wrapParenthesis(startLoc, val);\n  }\n  wrapParenthesis(startLoc, expression) {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n      this.takeSurroundingComments(expression, startLoc.index, this.state.lastTokEndLoc.index);\n      return expression;\n    }\n    const parenExpression = this.startNodeAt(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n  parseParenItem(node, startLoc) {\n    return node;\n  }\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(Errors.UnexpectedNewTarget, {\n          at: metaProp\n        });\n      }\n      return metaProp;\n    }\n    return this.parseNew(node);\n  }\n  parseNew(node) {\n    this.parseNewCallee(node);\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n    return this.finishNode(node, \"NewExpression\");\n  }\n  parseNewCallee(node) {\n    var _node$callee$extra;\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, {\n        at: node.callee\n      });\n    } else if (this.isOptionalChain(node.callee) && !((_node$callee$extra = node.callee.extra) != null && _node$callee$extra.parenthesized)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.lastTokEndLoc\n      });\n    } else if (this.eat(18)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.startLoc\n      });\n    }\n  }\n  parseTemplateElement(isTagged) {\n    const {\n      start,\n      startLoc,\n      end,\n      value\n    } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(createPositionWithColumnOffset(startLoc, 1));\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          at: createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos, 1)\n        });\n      }\n    }\n    const isTail = this.match(24);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset)\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(finishedNode, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\n    return finishedNode;\n  }\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(Errors.InvalidRecordProperty, {\n          at: prop\n        });\n      }\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n      node.properties.push(prop);\n    }\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n  addTrailingCommaExtraToNode(node) {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));\n  }\n  parsePropertyDefinition(refExpressionErrors) {\n    let decorators = [];\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc\n        });\n      }\n      while (this.match(26)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n    prop.method = false;\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n    let isGenerator = this.eat(55);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(55);\n        this.parsePropertyName(prop);\n      }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(55)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n    return this.parseObjPropValue(prop, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n  checkGetterSetterParams(method) {\n    var _params;\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length !== paramCount) {\n      this.raise(method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: method\n      });\n    }\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: method\n      });\n    }\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      const finishedProp = this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(29)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc\n          });\n        }\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n  parsePropertyName(prop, refExpressionErrors) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const {\n        type,\n        value\n      } = this.state;\n      let key;\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case 132:\n            key = this.parseNumericLiteral(value);\n            break;\n          case 131:\n            key = this.parseStringLiteral(value);\n            break;\n          case 133:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case 134:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case 136:\n            {\n              const privateKeyLoc = this.state.startLoc;\n              if (refExpressionErrors != null) {\n                if (refExpressionErrors.privateKeyLoc === null) {\n                  refExpressionErrors.privateKeyLoc = privateKeyLoc;\n                }\n              } else {\n                this.raise(Errors.UnexpectedPrivateField, {\n                  at: privateKeyLoc\n                });\n              }\n              key = this.parsePrivateName();\n              break;\n            }\n          default:\n            throw this.unexpected();\n        }\n      }\n      prop.key = key;\n      if (type !== 136) {\n        prop.computed = false;\n      }\n    }\n    return prop.key;\n  }\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return finishedNode;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n  parseArrowExpression(node, params, isAsync, trailingCommaLoc) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    if (!this.match(5) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params;\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n        if (hasStrictModeDirective && nonSimple) {\n          this.raise(Errors.IllegalLanguageModeDirective, {\n            at: (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.loc.end : node\n          });\n        }\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n        if (this.state.strict && node.id) {\n          this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n  isSimpleParameter(node) {\n    return node.type === \"Identifier\";\n  }\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = !allowDuplicates && new Set();\n    const formalParameters = {\n      type: \"FormalParameters\"\n    };\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged\n      });\n    }\n  }\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\"\n        });\n      }\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n    return elt;\n  }\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(liberal);\n    return this.createIdentifier(node, name);\n  }\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n  parseIdentifierName(liberal) {\n    let name;\n    const {\n      startLoc,\n      type\n    } = this.state;\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(130);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n    this.next();\n    return name;\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc\n        });\n        return;\n      }\n      this.expressionScope.recordAsyncArrowParametersError({\n        at: startLoc\n      });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, {\n          at: startLoc\n        });\n        return;\n      }\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word\n      });\n      return;\n    }\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word\n      });\n    }\n  }\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n  parseAwait(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter, {\n      at: node\n    });\n    if (this.eat(55)) {\n      this.raise(Errors.ObsoleteAwaitStar, {\n        at: node\n      });\n    }\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n  isAmbiguousAwait() {\n    if (this.hasPrecedingLineBreak()) return true;\n    const {\n      type\n    } = this.state;\n    return type === 53 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 101 && !this.state.containsEsc || type === 135 || type === 56 || this.hasPlugin(\"v8intrinsic\") && type === 54;\n  }\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter, {\n      at: node\n    });\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(55);\n      switch (this.state.type) {\n        case 13:\n        case 137:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n  checkPipelineAtInfixOperator(left, leftStartLoc) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc\n        });\n      }\n    }\n  }\n  parseSmartPipelineBodyInStyle(childExpr, startLoc) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n  checkSmartPipeTopicBodyEarlyErrors(startLoc) {\n    if (this.match(19)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, {\n        at: this.state.startLoc\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, {\n        at: startLoc\n      });\n    }\n  }\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n  withSmartMixTopicForbiddingContext(callback) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n  parseFSharpPipelineBody(prec) {\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    if (!this.match(5)) {\n      this.unexpected(null, 5);\n    }\n    const program = this.startNodeAt(this.state.endLoc);\n    this.next();\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n  parsePropertyNamePrefixOperator(prop) {}\n}\n\nconst loopLabel = {\n    kind: \"loop\"\n  },\n  switchLabel = {\n    kind: \"switch\"\n  };\nvar ParseFunctionFlag = {\n  Expression: 0,\n  Declaration: 1,\n  HangingDeclaration: 2,\n  NullableId: 4,\n  Async: 8\n};\nvar ParseStatementFlag = {\n  StatementOnly: 0,\n  AllowImportExport: 1,\n  AllowDeclaration: 2,\n  AllowFunctionDeclaration: 4,\n  AllowLabeledFunction: 8\n};\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n    if (typeof type === \"number\") {\n      {\n        if (type === 136) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(i, 1, new Token({\n            type: getExportedToken(27),\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc\n          }), new Token({\n            type: getExportedToken(130),\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end\n          }));\n          i++;\n          continue;\n        }\n        if (tokenIsTemplate(type)) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === 96) {\n            startToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          } else {\n            startToken = new Token({\n              type: getExportedToken(8),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          }\n          let templateValue, templateElementEnd, templateElementEndLoc, endToken;\n          if (type === 24) {\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          } else {\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              type: getExportedToken(23),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          }\n          tokens.splice(i, 1, startToken, new Token({\n            type: getExportedToken(20),\n            value: templateValue,\n            start: backquoteEnd,\n            end: templateElementEnd,\n            startLoc: backquoteEndLoc,\n            endLoc: templateElementEndLoc\n          }), endToken);\n          i += 2;\n          continue;\n        }\n      }\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n    return this.finishNode(file, \"File\");\n  }\n  parseProgram(program, end = 137, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, {\n          at,\n          localName\n        });\n      }\n    }\n    let finishedProgram;\n    if (end === 137) {\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      finishedProgram = this.finishNodeAt(program, \"Program\", createPositionWithColumnOffset(this.state.startLoc, -1));\n    }\n    return finishedProgram;\n  }\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n  parseInterpreterDirective() {\n    if (!this.match(28)) {\n      return null;\n    }\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n  isLet() {\n    if (!this.isContextual(99)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === 92) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  chStartsBindingPattern(ch) {\n    return ch === 91 || ch === 123;\n  }\n  hasFollowingBindingAtom() {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingPattern(nextCh) || this.chStartsBindingIdentifier(nextCh, next);\n  }\n  hasFollowingBindingIdentifier() {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingIdentifier(nextCh, next);\n  }\n  startsUsingForOf() {\n    const lookahead = this.lookahead();\n    if (lookahead.type === 101 && !lookahead.containsEsc) {\n      return false;\n    } else {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n  parseModuleItem() {\n    return this.parseStatementLike(ParseStatementFlag.AllowImportExport | ParseStatementFlag.AllowDeclaration | ParseStatementFlag.AllowFunctionDeclaration | ParseStatementFlag.AllowLabeledFunction);\n  }\n  parseStatementListItem() {\n    return this.parseStatementLike(ParseStatementFlag.AllowDeclaration | ParseStatementFlag.AllowFunctionDeclaration | ParseStatementFlag.AllowLabeledFunction);\n  }\n  parseStatementOrFunctionDeclaration(disallowLabeledFunction) {\n    return this.parseStatementLike(ParseStatementFlag.AllowFunctionDeclaration | (disallowLabeledFunction ? 0 : ParseStatementFlag.AllowLabeledFunction));\n  }\n  parseStatement() {\n    return this.parseStatementLike(ParseStatementFlag.StatementOnly);\n  }\n  parseStatementLike(flags) {\n    let decorators = null;\n    if (this.match(26)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n  parseStatementContent(flags, decorators) {\n    const starttype = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & ParseStatementFlag.AllowDeclaration);\n    const allowFunctionDeclaration = !!(flags & ParseStatementFlag.AllowFunctionDeclaration);\n    const topLevel = flags & ParseStatementFlag.AllowImportExport;\n    switch (starttype) {\n      case 60:\n        return this.parseBreakContinueStatement(node, true);\n      case 63:\n        return this.parseBreakContinueStatement(node, false);\n      case 64:\n        return this.parseDebuggerStatement(node);\n      case 90:\n        return this.parseDoWhileStatement(node);\n      case 91:\n        return this.parseForStatement(node);\n      case 68:\n        if (this.lookaheadCharCode() === 46) break;\n        if (!allowDeclaration) {\n          if (this.state.strict) {\n            this.raise(Errors.StrictFunction, {\n              at: this.state.startLoc\n            });\n          } else if (!allowFunctionDeclaration) {\n            this.raise(Errors.SloppyFunction, {\n              at: this.state.startLoc\n            });\n          }\n        }\n        return this.parseFunctionStatement(node, false, !allowDeclaration && allowFunctionDeclaration);\n      case 80:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(this.maybeTakeDecorators(decorators, node), true);\n      case 69:\n        return this.parseIfStatement(node);\n      case 70:\n        return this.parseReturnStatement(node);\n      case 71:\n        return this.parseSwitchStatement(node);\n      case 72:\n        return this.parseThrowStatement(node);\n      case 73:\n        return this.parseTryStatement(node);\n      case 105:\n        if (this.hasFollowingLineBreak() || this.state.containsEsc || !this.hasFollowingBindingIdentifier()) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, {\n            at: this.state.startLoc\n          });\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseVarStatement(node, \"using\");\n      case 99:\n        {\n          if (this.state.containsEsc) {\n            break;\n          }\n          const next = this.nextTokenStart();\n          const nextCh = this.codePointAtPos(next);\n          if (nextCh !== 91) {\n            if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n            if (!this.chStartsBindingIdentifier(nextCh, next) && nextCh !== 123) {\n              break;\n            }\n          }\n        }\n      case 75:\n        {\n          if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, {\n              at: this.state.startLoc\n            });\n          }\n        }\n      case 74:\n        {\n          const kind = this.state.value;\n          return this.parseVarStatement(node, kind);\n        }\n      case 92:\n        return this.parseWhileStatement(node);\n      case 76:\n        return this.parseWithStatement(node);\n      case 5:\n        return this.parseBlock();\n      case 13:\n        return this.parseEmptyStatement(node);\n      case 83:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n      case 82:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(Errors.UnexpectedImportExport, {\n              at: this.state.startLoc\n            });\n          }\n          this.next();\n          let result;\n          if (starttype === 83) {\n            result = this.parseImport(node);\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node, decorators);\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n          this.assertModuleNodeAllowed(result);\n          return result;\n        }\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (!allowDeclaration) {\n              this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n                at: this.state.startLoc\n              });\n            }\n            this.next();\n            return this.parseFunctionStatement(node, true, !allowDeclaration && allowFunctionDeclaration);\n          }\n        }\n    }\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, flags);\n    } else {\n      return this.parseExpressionStatement(node, expr, decorators);\n    }\n  }\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, {\n        at: node\n      });\n    }\n  }\n  decoratorsEnabledBeforeExport() {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return this.hasPlugin(\"decorators\") && !!this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\");\n  }\n  maybeTakeDecorators(maybeDecorators, classNode, exportNode) {\n    if (maybeDecorators) {\n      classNode.decorators = maybeDecorators;\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n  canHaveLeadingDecorator() {\n    return this.match(80);\n  }\n  parseDecorators(allowExport) {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(26));\n    if (this.match(82)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, {\n          at: this.state.startLoc\n        });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n    return decorators;\n  }\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n    const node = this.startNode();\n    this.next();\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr;\n      if (this.match(10)) {\n        const startLoc = this.state.startLoc;\n        this.next();\n        expr = this.parseExpression();\n        this.expect(11);\n        expr = this.wrapParenthesis(startLoc, expr);\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (this.getPluginOption(\"decorators\", \"allowCallParenthesized\") === false && node.expression !== expr) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startLoc);\n          node.object = expr;\n          if (this.match(136)) {\n            this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n    return expr;\n  }\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n  verifyBreakContinue(node, isBreak) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, {\n        at: node,\n        type\n      });\n    }\n  }\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n  parseDoWhileStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    this.expect(92);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = null;\n    if (this.isAwaitAllowed() && this.eatContextual(96)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(10);\n    if (this.match(13)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n    const startsWithLet = this.isContextual(99);\n    const startsWithUsing = this.isContextual(105) && !this.hasFollowingLineBreak();\n    const isLetOrUsing = startsWithLet && this.hasFollowingBindingAtom() || startsWithUsing && this.hasFollowingBindingIdentifier() && this.startsUsingForOf();\n    if (this.match(74) || this.match(75) || isLetOrUsing) {\n      const initNode = this.startNode();\n      const kind = this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n      const isForIn = this.match(58);\n      if (isForIn && startsWithUsing) {\n        this.raise(Errors.ForInUsing, {\n          at: init\n        });\n      }\n      if ((isForIn || this.isContextual(101)) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n    const startsWithAsync = this.isContextual(95);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(101);\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, {\n          at: init\n        });\n      }\n      if (awaitAt === null && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(Errors.ForOfAsync, {\n          at: init\n        });\n      }\n    }\n    if (isForOf || this.match(58)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, {\n        in: {\n          type\n        }\n      });\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n  parseFunctionStatement(node, isAsync, isHangingDeclaration) {\n    this.next();\n    return this.parseFunction(node, ParseFunctionFlag.Declaration | (isHangingDeclaration ? ParseFunctionFlag.HangingDeclaration : 0) | (isAsync ? ParseFunctionFlag.Async : 0));\n  }\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatementOrFunctionDeclaration(true);\n    node.alternate = this.eat(66) ? this.parseStatementOrFunctionDeclaration(true) : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, {\n        at: this.state.startLoc\n      });\n    }\n    this.next();\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(61) || this.match(65)) {\n        const isCase = this.match(61);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n  parseThrowStatement(node) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: {\n        type: \"CatchClause\"\n      },\n      binding: BIND_CATCH_PARAM\n    });\n    return param;\n  }\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.match(62)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(67) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, {\n        at: node\n      });\n    }\n    return this.finishNode(node, \"TryStatement\");\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, {\n        at: this.state.startLoc\n      });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    return this.finishNode(node, \"WithStatement\");\n  }\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n  parseLabeledStatement(node, maybeName, expr, flags) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName\n        });\n      }\n    }\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(71) ? \"switch\" : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = flags & ParseStatementFlag.AllowLabeledFunction ? this.parseStatementOrFunctionDeclaration(false) : this.parseStatement();\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(5);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n    while (!this.match(end)) {\n      const stmt = topLevel ? this.parseModuleItem() : this.parseStatementListItem();\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n          continue;\n        }\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n    this.next();\n  }\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(58);\n    this.next();\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\"\n      });\n    }\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: {\n          type: \"ForStatement\"\n        }\n      });\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n  parseVar(node, isFor, kind, allowMissingInitializer = false) {\n    const declarations = node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(29) ? null : isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      if (decl.init === null && !allowMissingInitializer) {\n        if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(58) || this.isContextual(101)))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\"\n          });\n        } else if (kind === \"const\" && !(this.match(58) || this.isContextual(101))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\"\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n    return node;\n  }\n  parseVarId(decl, kind) {\n    if (kind === \"using\" && !this.inModule && this.match(96)) {\n      this.raise(Errors.AwaitInUsingBinding, {\n        at: this.state.startLoc\n      });\n    }\n    const id = this.parseBindingAtom();\n    this.checkLVal(id, {\n      in: {\n        type: \"VariableDeclarator\"\n      },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL\n    });\n    decl.id = id;\n  }\n  parseAsyncFunctionExpression(node) {\n    return this.parseFunction(node, ParseFunctionFlag.Async);\n  }\n  parseFunction(node, flags = ParseFunctionFlag.Expression) {\n    const hangingDeclaration = flags & ParseFunctionFlag.HangingDeclaration;\n    const isDeclaration = !!(flags & ParseFunctionFlag.Declaration);\n    const requireId = isDeclaration && !(flags & ParseFunctionFlag.NullableId);\n    const isAsync = !!(flags & ParseFunctionFlag.Async);\n    this.initFunction(node, isAsync);\n    if (this.match(55)) {\n      if (hangingDeclaration) {\n        this.raise(Errors.GeneratorInSingleStatementContext, {\n          at: this.state.startLoc\n        });\n      }\n      this.next();\n      node.generator = true;\n    }\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n    if (isDeclaration && !hangingDeclaration) {\n      this.registerFunctionStatementId(node);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.loc.start);\n  }\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n  isClassProperty() {\n    return this.match(29) || this.match(13) || this.match(8);\n  }\n  isClassMethod() {\n    return this.match(10);\n  }\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc\n            });\n          }\n          continue;\n        }\n        if (this.match(26)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n        const member = this.startNode();\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n        this.parseClassMember(classBody, member, state);\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(Errors.DecoratorConstructor, {\n            at: member\n          });\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(104);\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const accessorProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n    if (this.eat(55)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(136);\n      this.parseClassElementName(method);\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key\n        });\n      }\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(136);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n    this.parsePostMemberNameModifiers(publicMember);\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, {\n            at: key\n          });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, {\n            at: key\n          });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(55);\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n      method.kind = \"method\";\n      const isPrivate = this.match(136);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, {\n            at: publicMethod.key\n          });\n        }\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(55) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(136);\n      this.parseClassElementName(publicMethod);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, {\n            at: publicMethod.key\n          });\n        }\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n      this.checkGetterSetterParams(publicMethod);\n    } else if (isContextual && key.name === \"accessor\" && !this.isLineTerminator()) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n      const isPrivate = this.match(136);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n  parseClassElementName(member) {\n    const {\n      type,\n      value\n    } = this.state;\n    if ((type === 130 || type === 131) && member.static && value === \"prototype\") {\n      this.raise(Errors.StaticPrototype, {\n        at: this.state.startLoc\n      });\n    }\n    if (type === 136) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n    return this.parsePropertyName(member);\n  }\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(Errors.DecoratorStaticBlock, {\n        at: member\n      });\n    }\n  }\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(Errors.ConstructorClassField, {\n        at: prop.key\n      });\n    }\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\n  }\n  pushClassAccessorProperty(classBody, prop, isPrivate) {\n    if (!isPrivate && !prop.computed) {\n      const key = prop.key;\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        this.raise(Errors.ConstructorClassField, {\n          at: key\n        });\n      }\n    }\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n    if (isPrivate) {\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\n    }\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.loc.start);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {}\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n  parseClassAccessorProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, {\n          at: this.state.startLoc\n        });\n      }\n    }\n  }\n  parseClassSuper(node) {\n    node.superClass = this.eat(81) ? this.parseExprSubscripts() : null;\n  }\n  parseExport(node, decorators) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      throw this.unexpected(null, 5);\n    }\n    if (hasNamespace && parseAfterNamespace) {\n      throw this.unexpected(null, 97);\n    }\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      var _node2$declaration;\n      const node2 = node;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (((_node2$declaration = node2.declaration) == null ? void 0 : _node2$declaration.type) === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n    if (this.eat(65)) {\n      const node2 = node;\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.checkExport(node2, true, true);\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n    throw this.unexpected(null, 5);\n  }\n  eatExportStar(node) {\n    return this.eat(55);\n  }\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(93)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n  isAsyncFunction() {\n    if (!this.isContextual(95)) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    if (this.match(68)) {\n      this.next();\n      return this.parseFunction(expr, ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId);\n    } else if (this.isAsyncFunction()) {\n      this.next();\n      this.next();\n      return this.parseFunction(expr, ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId | ParseFunctionFlag.Async);\n    }\n    if (this.match(80)) {\n      return this.parseClass(expr, true, true);\n    }\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(Errors.DecoratorBeforeExport, {\n          at: this.state.startLoc\n        });\n      }\n      return this.parseClass(this.maybeTakeDecorators(this.parseDecorators(false), this.startNode()), true, true);\n    }\n    if (this.match(75) || this.match(74) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc\n      });\n    }\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n  parseExportDeclaration(node) {\n    if (this.match(80)) {\n      const node = this.parseClass(this.startNode(), true, false);\n      return node;\n    }\n    return this.parseStatementListItem();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if (type === 95 && !this.state.containsEsc || type === 99) {\n        return false;\n      }\n      if ((type === 128 || type === 127) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n        if (tokenIsIdentifier(nextType) && nextType !== 97 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(65)) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n    if (this.match(65) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n    return false;\n  }\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(97)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n    this.semicolon();\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (type === 26) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          throw this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc\n          });\n        }\n        return true;\n      }\n    }\n    return type === 74 || type === 75 || type === 68 || type === 80 || this.isLet() || this.isAsyncFunction();\n  }\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n          const declaration = node.declaration;\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration\n            });\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName\n              });\n            } else {\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n  checkDuplicateExports(node, exportName) {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, {\n          at: node\n        });\n      } else {\n        this.raise(Errors.DuplicateExport, {\n          at: node,\n          exportName\n        });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(128);\n      const isString = this.match(131);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n    return nodes;\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(93)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n  parseModuleExportName() {\n    if (this.match(131)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0)\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n  isJSONModuleImport(node) {\n    if (node.assertions != null) {\n      return node.assertions.some(({\n        key,\n        value\n      }) => {\n        return value.value === \"json\" && (key.type === \"Identifier\" ? key.name === \"type\" : key.value === \"type\");\n      });\n    }\n    return false;\n  }\n  checkImportReflection(node) {\n    if (node.module) {\n      var _node$assertions;\n      if (node.specifiers.length !== 1 || node.specifiers[0].type !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, {\n          at: node.specifiers[0].loc.start\n        });\n      }\n      if (((_node$assertions = node.assertions) == null ? void 0 : _node$assertions.length) > 0) {\n        this.raise(Errors.ImportReflectionHasAssertion, {\n          at: node.specifiers[0].loc.start\n        });\n      }\n    }\n  }\n  checkJSONModuleImport(node) {\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      const {\n        specifiers\n      } = node;\n      if (specifiers != null) {\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\" ? imported.name !== \"default\" : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start\n          });\n        }\n      }\n    }\n  }\n  parseMaybeImportReflection(node) {\n    let isImportReflection = false;\n    if (this.isContextual(125)) {\n      const lookahead = this.lookahead();\n      const nextType = lookahead.type;\n      if (tokenIsIdentifier(nextType)) {\n        if (nextType !== 97) {\n          isImportReflection = true;\n        } else {\n          const nextNextTokenFirstChar = this.input.charCodeAt(this.nextTokenStartSince(lookahead.end));\n          if (nextNextTokenFirstChar === 102) {\n            isImportReflection = true;\n          }\n        }\n      } else if (nextType !== 12) {\n        isImportReflection = true;\n      }\n    }\n    if (isImportReflection) {\n      this.expectPlugin(\"importReflection\");\n      this.next();\n      node.module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      node.module = false;\n    }\n  }\n  parseImport(node) {\n    node.specifiers = [];\n    if (!this.match(131)) {\n      this.parseMaybeImportReflection(node);\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(12);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(97);\n    }\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    if (!this.match(131)) this.unexpected();\n    return this.parseExprAtom();\n  }\n  shouldParseDefaultImport(node) {\n    return tokenIsIdentifier(this.state.type);\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  finishImportSpecifier(specifier, type, bindingType = BIND_LEXICAL) {\n    this.checkLVal(specifier.local, {\n      in: {\n        type\n      },\n      binding: bindingType\n    });\n    return this.finishNode(specifier, type);\n  }\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n    do {\n      if (this.match(8)) {\n        break;\n      }\n      const node = this.startNode();\n      const keyName = this.state.value;\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(131)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(14);\n      if (!this.match(131)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(12));\n    return attrs;\n  }\n  maybeParseModuleAttributes() {\n    if (this.match(76) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key\n        });\n      }\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(14);\n      if (!this.match(131)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n    return attrs;\n  }\n  maybeParseImportAssertions() {\n    if (this.isContextual(94) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    this.eat(5);\n    const attrs = this.parseAssertEntries();\n    this.eat(8);\n    return attrs;\n  }\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(55)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(93);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc\n          });\n        }\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const specifier = this.startNode();\n      const importedIsString = this.match(131);\n      const isMaybeTypeOnly = this.isContextual(128);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly, undefined);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (this.eatContextual(93)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: imported.value\n        });\n      }\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\", bindingType);\n  }\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\nconst tokTypes = generateExportedTokenTypes(tt);\nfunction getParser(options, input) {\n  let cls = Parser;\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n  return new cls(options, input);\n}\nconst parserClassCache = {};\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = tokTypes;\n//# sourceMappingURL=index.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["constructor","filePath","this","entryFile","process","platform","includes","path","resolve","split","win32","sep","join","posix","slice","test","root","toLowerCase","tree","undefined","parse","id","getNonce","name","basename","replace","fileName","importPath","expanded","depth","count","thirdParty","reactRouter","reduxConnect","children","parentList","props","error","parser","getTree","setTree","updateTree","getChildNodes","node","push","matchExpand","i","length","oldNode","traverseTree","forEach","child","newNode","toggleNode","callback","childNode","componentTree","getFileName","ast","babelParser","fs","readFileSync","sourceType","tokens","plugins","err","imports","getImports","program","body","getJSXChildren","checkForRedux","ext","extname","fileArray","readdirSync","dirname","regEx","RegExp","find","fileStr","match","filter","item","type","reduce","accum","curr","specifiers","local","source","value","importName","imported","findVarDecImports","declarations","hasOwnProperty","callee","arguments","key","astTokens","importsObj","parentNode","token","childNodes","label","getJSXProps","Object","values","astToken","parent","concat","j","connectAlias","reduxImported","keys","extContext","subscriptions","vscode","commands","registerCommand","createOrShow","text","possible","charAt","Math","floor","random","ReacTreePanel","static","column","window","activeTextEditor","viewColumn","currentPanel","_panel","reveal","console","log","extensionPath","ViewColumn","Two","_disposables","_extensionPath","_extContext","state","workspaceState","get","TestParser","createWebviewPanel","viewType","enableScripts","localResourceRoots","Uri","file","webview","html","_getHtmlForWebview","onDidDispose","dispose","onDidReceiveMessage","msg","postMessage","command","executeCommand","data","n","cn","updateView","doc","workspace","openTextDocument","showTextDocument","preserveFocus","preview","settings","getConfiguration","view","update","document","x","pop","scriptUri","with","scheme","module","exports","require","_objectWithoutPropertiesLoose","excluded","target","sourceKeys","indexOf","defineProperty","Position","line","col","index","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset","ParseErrorCode","SyntaxError","SourceTypeModuleError","reflect","last","object","set","instantiate","properties","descriptors","map","descriptor","enumerable","assign","instance","configurable","ModuleErrors","ImportMetaOutsideModule","message","code","ImportOutsideModule","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","CatchClause","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","prefix","String","StandardErrors","AccessorIsGenerator","kind","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitInUsingBinding","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorArgumentsOutsideParentheses","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForInUsing","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","maxArgumentCount","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","ImportReflectionHasAssertion","ImportReflectionNotBinding","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","missingPlugin","JSON","stringify","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","surrogateCharCode","toString","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","keyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","expected","UnexpectedTokenUnaryExponentiation","UnexpectedUsingDeclaration","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","UsingDeclarationHasBindingPattern","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","UnparenthesizedPipeBodyDescriptions","Set","PipelineOperatorErrors","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","_excluded$1","_excluded2$1","toParseErrorConstructor","_ref","toMessage","loc","details","clone","overrides","pos","ParseErrorEnum","argument","syntaxPlugin","Array","isArray","parseErrorTemplates","ParseErrorConstructors","reasonCode","template","_ref2","rest","Errors","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","toUnenumerable","toESTreeLocation","TokContext","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","ExportedTokenType","conf","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","options","createToken","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_using","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_satisfies","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","bigint","decimal","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenCanStartExpression","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsKeyword","tokenLabelName","tokenOperatorPrecedence","tokenIsTemplate","getExportedToken","context","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","has","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_TS_MODULE","BIND_FLAGS_TS_IMPORT","BIND_LEXICAL","BIND_KIND_VALUE","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","inTopLevel","currentScope","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","allowDirectSuper","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","add","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","raise","next","checkLocalExport","topLevelScope","FlowScope","args","super","declareFunctions","FlowScopeHandler","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","pluginConfig","pluginName","pluginOptions","actualOptions","getPluginOption","plugin","_this$plugins$get","setTrailingComments","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","addComment","comment","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","setLeadingComments","commentStart","input","charCodeAt","params","finalizeRemainingComments","resetPreviousNodeTrailingComments","takeSurroundingComments","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceToLineBreak","isWhitespace","State","strict","curLine","lineStart","startLoc","endLoc","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","lastTokEndLoc","lastTokStartLoc","lastTokStart","canStartJSXElement","containsEsc","firstInvalidTemplateEscapePos","strictErrors","tokensLength","init","strictMode","startLine","startColumn","curPosition","skipArrays","val","_isDigit","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","readStringContents","initialPos","initialLineStart","initialCurLine","out","firstInvalidLoc","chunkStart","unterminated","isStringEnd","res","readEscapedChar","str","containsInvalid","inTemplate","throwOnInvalid","readHexChar","readCodePoint","fromCodePoint","strictNumericEscape","startPos","octalStr","octal","parseInt","len","forceLen","readInt","invalidEscapeSequence","allowNumSeparator","bailOnError","forbiddenSiblings","isAllowedSibling","invalid","total","e","Infinity","invalidDigit","prev","Number","isNaN","unexpectedNumericSeparator","numericSeparatorInEscapeSequence","invalidCodePoint","_excluded","_excluded2","buildPosition","VALID_REGEX_FLAGS","Token","Tokenizer","isLookahead","errorHandlers_readInt","errorRecovery","errorBuilder","errorHandlers_readCodePoint","errorHandlers_readStringContents_string","recordStrictModeErrors","errorHandlers_readStringContents_template","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","nextTokenStart","nextTokenStartSince","lastIndex","lookaheadCharCode","codePointAtPos","cp","trail","setStrict","toParseError","clear","skipSpace","finishToken","getTokenFromCode","skipBlockComment","skipLineComment","startSkip","spaceStart","loop","attachComment","commentWhitespace","prevType","replaceToken","readToken_numberSign","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","proposal","topicToken","codePointAt","readToken_atSign","readToken_plus_min","readToken_lt","readToken_gt","size","readToken_eq_excl","readToken_question","next2","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","escaped","content","mods","char","pattern","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","parseFloat","quote","readTemplateContinuation","opening","firstCode","escStart","identifierCheck","esc","raiseProperties","raiseOverwrite","expectOnePlugin","pluginNames","some","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","stack","current","oldClassScope","from","declarePrivateName","elementType","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","usePrivateName","classScope","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","origin","recordArrowParameterBindingError","recordAsyncArrowParametersError","validateAsPattern","newExpressionScope","PARAM_YIELD","PARAM_AWAIT","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","isAsync","isGenerator","UtilParser","addExtra","extra","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","tryParse","fn","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","refExpressionErrors","andThrow","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","isLiteralPropertyName","isPrivateName","getPrivateNameSV","hasPropertyAsPrivateName","property","isOptionalChain","isObjectProperty","isObjectMethod","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","ExpressionErrors","Node","ranges","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","__clone","NodeUtils","startNode","startNodeAt","startNodeAtNode","finishNode","finishNodeAt","resetStartLocation","resetEndLocation","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportReflectionHasImportType","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","__proto__","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","Error","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","importsStack","hasImport","allowShadow","assert","TSErrors","AbstractMethodHasImplementation","methodName","AbstractPropertyHasInitializer","propertyName","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","AccessorCannotBeOptional","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","modifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","modifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","tsIsVarianceAnnotations","isPossiblyLiteralEnum","expression","computed","expressions","isUncomputedMemberExpressionChain","isValidAmbientConstInitializer","estree","_expression$extra","parenthesized","isNumber","operator","isNegativeNumber","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","p","option","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","superClass","parseRegExpLiteral","regex","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","_unused","parseDecimalLiteral","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","raw","expressionValue","stmt","rawValue","initFunction","checkDeclaration","getObjectOrClassMethodParams","method","isValidDirective","_stmt$expression$extr","parseBlockBody","allowDirectives","topLevel","afterBlockParse","directiveStatements","directives","d","pushClassMethod","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parsePrivateName","convertPrivateNameToPrivateIdentifier","parseFunctionBody","allowExpression","isMethod","inClassScope","funcNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","isPattern","isAccessor","shorthand","parseObjectProperty","isValidLVal","isUnparenthesizedInAssign","binding","isAssignable","isBinding","toAssignable","isLHS","toAssignableObjectExpressionProp","isLast","finishCallExpression","unfinished","optional","_node$arguments$","attributes","toReferencedArguments","parseExport","decorators","exportStartLoc","exported","_declaration$decorato","declaration","parseSubscript","base","noCalls","optionalChainMember","substring","stop","chain","jsx","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePoint","desc","entity","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","parseExprAtom","jsxParseEmptyExpression","jsxParseSpreadChild","parseExpression","previousContext","jsxParseAttribute","parseMaybeAssignAllowIn","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","flow","flowPragma","shouldParseTypes","shouldParseEnums","matches","exec","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","returnType","typeAnnotation","BIND_FLAGS_FLOW_DECLARE_FN","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","bodyNode","parseImport","hasModuleExport","bodyElement","isEsModuleType","default","isLet","exportKind","flowParseTypeAnnotation","finished","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatementLike","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","_node$extra","toAssignableList","trailingCommaLoc","SCOPE_FUNCTION","checkParams","result","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","isIteratorStart","left","exprList","toReferencedList","isParenthesizedExpr","_expr$extra","parseArrayLike","close","canBePattern","isTuple","isParenthesized","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","shouldParseDefaultImport","checkImportReflection","parseImportSpecifierLocal","specifier","finishImportSpecifier","maybeParseDefaultImportSpecifier","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","specifierTypeKind","as_ident","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","_jsx","currentContext","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","maybeUnwrapTypeCastExpression","async","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","strictModeChanged","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","parseTopLevel","fileNode","skipFlowComment","hasFlowCommentCompletion","commentSkip","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","toUpperCase","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","boolsLen","numsLen","strsLen","defaultedLen","afterNext","typescript","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","bind","tsParseModifiers","modified","disallowedModifiers","errorTemplate","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","nonNull","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","element","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseInOutModifiers","tsParseNoneModifiers","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsFillSignature","returnToken","signature","returnTokenRequired","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","parameters","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","paramsKey","returnTypeKey","firstParameter","tsParseTypeMember","parsePropertyName","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","checkType","isLabeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","nodeType","keywordTypeFromName","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","parseObjectLike","_unused2","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","checkIdentifier","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","oldInDisallowConditionalTypesContext","tsNextThenParseType","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","BIND_TS_ENUM","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","tsIsDeclarationStart","parseAssignableListItem","override","elt","pp","parameter","isSimpleParameter","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","_callee$extra","parseExprOp","leftStartLoc","minPrec","isSatisfies","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","allowMissingInitializer","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","idx","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","parseClassPropertyAnnotation","definite","parseClassAccessorProperty","declareClassPrivateMethodInScope","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","reportReservedArrowTypeParam","trailingComma","sawUnary","toAssignableParenthesizedExpression","checkToRestConversion","allowPattern","TSTypeCastExpression","TSParameterProperty","TSNonNullExpression","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","parseMaybeDecoratorArguments","checkCommaAfterRest","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","maybeTakeDecorators","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","rightOfAs","leftOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","v8intrinsic","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","identifier","placeholders","parsePlaceholder","assertNoSpace","finishPlaceholder","isFinished","chStartsBindingIdentifier","verifyBreakContinue","isBreak","parseStatementOrFunctionDeclaration","parseBlock","createNewLexicalScope","parseFunctionId","requireId","oldStrict","parseClassBody","startsWith","maybeParseExportDefaultSpecifier","checkExport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","LValParser","_node$extra3","_node$extra2","arg","toReferencedListDeep","parseSpread","parseRestBinding","closeCharCode","allowEmpty","elts","parseDecorator","parseBindingRestProperty","parseBindingProperty","_left","ObjectProperty","checkLVal","in","checkClashes","hasParenthesizedAncestor","validity","ParseErrorClass","isParenthesizedExpression","nextAncestor","declareNameFromIdentifier","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","_resultError$loc","parseYield","ownExpressionErrors","parseMaybeConditional","startIndex","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","finishedNode","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","isAwait","isAwaitAllowed","parseAwait","isDelete","parseUpdate","isAmbiguousAwait","updateExpressionNode","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","lookaheadCh","parseModuleExpression","parseAsyncFunctionExpression","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","meta","parseMetaProperty","parseFunction","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","_node$callee$extra","parseTemplateElement","isTagged","elemStart","elem","isTail","endOffset","elemEnd","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","_params","finishedProp","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","canBeReservedWord","isKeyword","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","ret","revertScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","StatementParser","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","babel7CompatTokens","interpreter","parseInterpreterDirective","finishedProgram","stmtToDirective","directiveLiteral","hasFollowingBindingAtom","endCh","chStartsBindingPattern","hasFollowingBindingIdentifier","startsUsingForOf","parseModuleItem","ParseStatementFlag","parseStatementListItem","disallowLabeledFunction","parseStatement","allowDeclaration","allowFunctionDeclaration","parseBreakContinueStatement","parseDebuggerStatement","parseDoWhileStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","decoratorsEnabledBeforeExport","maybeDecorators","classNode","exportNode","allowExport","paramsStartLoc","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","startsWithUsing","isLetOrUsing","initNode","parseVar","isForIn","parseForIn","startsWithAsync","isForOf","isHangingDeclaration","discriminant","cases","cur","sawDefault","isCase","simple","block","handler","clause","finalizer","statementStart","parsedNonDirective","await","isFor","hangingDeclaration","isDeclaration","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","_member$decorators","SCOPE_CLASS","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","_node2$declaration","isTypeExport","assertions","ParseFunctionFlag","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkJSONModuleImport","checkNames","isDefault","isFrom","_declaration$extra","nodes","clonePlaceholder","cloneStringLiteral","surrogate","isJSONModuleImport","_node$assertions","nonDefaultNamedSpecifier","parseMaybeImportReflection","isImportReflection","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","importSpecifier","Parser","opts","getOptions","pluginMap","pluginsMap","tokTypes","internalTokenTypes","generateExportedTokenTypes","getParser","decoratorsBeforeExport","allowCallParenthesized","proposalList","tupleSyntaxIsHash","syntaxType","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}