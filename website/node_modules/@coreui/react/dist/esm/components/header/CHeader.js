import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CHeader = forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, className = _a.className, container = _a.container, position = _a.position, rest = __rest(_a, ["children", "className", "container", "position"]);
    var _className = classNames('header', (_b = {}, _b["header-".concat(position)] = position, _b), className);
    var content;
    if (container) {
        content = (React__default.createElement("div", { className: "container".concat(container !== true ? '-' + container : '') }, children));
    }
    else {
        content = children;
    }
    return (React__default.createElement("div", __assign({ className: _className }, rest, { ref: ref }), content));
});
CHeader.propTypes = {
    children: propTypesExports.node,
    className: propTypesExports.string,
    container: propTypesExports.oneOfType([
        propTypesExports.bool,
        propTypesExports.oneOf([
            'sm',
            'md',
            'lg',
            'xl',
            'xxl',
            'fluid',
        ]),
    ]),
    position: propTypesExports.oneOf(['fixed', 'sticky']),
};
CHeader.displayName = 'CHeader';

export { CHeader };
//# sourceMappingURL=CHeader.js.map
