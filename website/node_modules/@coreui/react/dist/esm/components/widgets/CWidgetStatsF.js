import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { colorPropType } from '../Types.js';
import { CCard } from '../card/CCard.js';
import { CCardBody } from '../card/CCardBody.js';
import { CCardFooter } from '../card/CCardFooter.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CWidgetStatsF = forwardRef(function (_a, ref) {
    var className = _a.className, color = _a.color, footer = _a.footer, icon = _a.icon, _b = _a.padding, padding = _b === void 0 ? true : _b, title = _a.title, value = _a.value, rest = __rest(_a, ["className", "color", "footer", "icon", "padding", "title", "value"]);
    var _className = classNames(className);
    return (React__default.createElement(CCard, __assign({ className: _className }, rest, { ref: ref }),
        React__default.createElement(CCardBody, { className: "d-flex align-items-center ".concat(padding === false && 'p-0') },
            React__default.createElement("div", { className: "me-3 text-white bg-".concat(color, " ").concat(padding ? 'p-3' : 'p-4') }, icon),
            React__default.createElement("div", null,
                React__default.createElement("div", { className: "fs-6 fw-semibold text-".concat(color) }, value),
                React__default.createElement("div", { className: "text-medium-emphasis text-uppercase fw-semibold small" }, title))),
        footer && React__default.createElement(CCardFooter, null, footer)));
});
CWidgetStatsF.propTypes = {
    className: propTypesExports.string,
    color: colorPropType,
    footer: propTypesExports.oneOfType([propTypesExports.string, propTypesExports.node]),
    icon: propTypesExports.oneOfType([propTypesExports.string, propTypesExports.node]),
    padding: propTypesExports.bool,
    title: propTypesExports.oneOfType([propTypesExports.string, propTypesExports.node]),
    value: propTypesExports.oneOfType([propTypesExports.string, propTypesExports.node, propTypesExports.number]),
};
CWidgetStatsF.displayName = 'CWidgetStatsF';

export { CWidgetStatsF };
//# sourceMappingURL=CWidgetStatsF.js.map
