import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import { colorPropType } from '../Types.js';
import { CCard } from '../card/CCard.js';
import { CCardBody } from '../card/CCardBody.js';
import { CProgress } from '../progress/CProgress.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CWidgetStatsC = forwardRef(function (_a, ref) {
    var className = _a.className, color = _a.color, icon = _a.icon, inverse = _a.inverse, progress = _a.progress, title = _a.title, value = _a.value, rest = __rest(_a, ["className", "color", "icon", "inverse", "progress", "title", "value"]);
    return (React__default.createElement(CCard, __assign({ className: className, color: color }, (inverse && { textColor: 'high-emphasis-inverse' }), rest, { ref: ref }),
        React__default.createElement(CCardBody, null,
            icon && (React__default.createElement("div", { className: "text-medium-emphasis".concat(inverse ? '-inverse' : '', " text-end mb-4") }, icon)),
            value && (React__default.createElement("div", { className: "text-high-emphasis".concat(inverse ? '-inverse' : '', " fs-4 fw-semibold") }, value)),
            title && (React__default.createElement("div", { className: inverse ? 'text-medium-emphasis-inverse' : 'text-medium-emphasis' }, title)),
            React__default.createElement(CProgress, __assign({ className: "mt-3 mb-0", height: 4 }, (inverse && { white: true }), progress)))));
});
CWidgetStatsC.propTypes = {
    className: propTypesExports.string,
    color: colorPropType,
    icon: propTypesExports.oneOfType([propTypesExports.string, propTypesExports.node]),
    inverse: propTypesExports.bool,
    progress: propTypesExports.object,
    title: propTypesExports.oneOfType([propTypesExports.string, propTypesExports.node]),
    value: propTypesExports.oneOfType([propTypesExports.string, propTypesExports.node, propTypesExports.number]),
};
CWidgetStatsC.displayName = 'CWidgetStatsCWidgetStatsC';

export { CWidgetStatsC };
//# sourceMappingURL=CWidgetStatsC.js.map
