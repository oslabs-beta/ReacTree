import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef, useRef } from 'react';
import '../../node_modules/react-transition-group/esm/CSSTransition.js';
import '../../node_modules/react-transition-group/esm/ReplaceTransition.js';
import '../../node_modules/react-transition-group/esm/SwitchTransition.js';
import '../../node_modules/react-transition-group/esm/TransitionGroup.js';
import Transition from '../../node_modules/react-transition-group/esm/Transition.js';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { useForkedRef } from '../../utils/hooks/useForkedRef.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CBackdrop = forwardRef(function (_a, ref) {
    var _b = _a.className, className = _b === void 0 ? 'modal-backdrop' : _b, visible = _a.visible, rest = __rest(_a, ["className", "visible"]);
    var backdropRef = useRef(null);
    var forkedRef = useForkedRef(ref, backdropRef);
    var _className = classNames(className, 'fade');
    var getTransitionClass = function (state) {
        return state === 'entered' && 'show';
    };
    return (React__default.createElement(Transition, { in: visible, mountOnEnter: true, nodeRef: backdropRef, timeout: 150, unmountOnExit: true }, function (state) {
        var transitionClass = getTransitionClass(state);
        return (React__default.createElement("div", __assign({ className: classNames(_className, transitionClass) }, rest, { ref: forkedRef })));
    }));
});
CBackdrop.propTypes = {
    className: propTypesExports.string,
    visible: propTypesExports.bool,
};
CBackdrop.displayName = 'CBackdrop';

export { CBackdrop };
//# sourceMappingURL=CBackdrop.js.map
