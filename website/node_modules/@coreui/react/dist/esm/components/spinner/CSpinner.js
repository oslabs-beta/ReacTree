import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { colorPropType } from '../Types.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CSpinner = forwardRef(function (_a, ref) {
    var className = _a.className, color = _a.color, _b = _a.component, Component = _b === void 0 ? 'div' : _b, size = _a.size, _c = _a.variant, variant = _c === void 0 ? 'border' : _c, _d = _a.visuallyHiddenLabel, visuallyHiddenLabel = _d === void 0 ? 'Loading...' : _d, rest = __rest(_a, ["className", "color", "component", "size", "variant", "visuallyHiddenLabel"]);
    var _className = classNames("spinner-".concat(variant), "text-".concat(color), size && "spinner-".concat(variant, "-").concat(size), className);
    return (React__default.createElement(Component, __assign({ className: _className, role: "status" }, rest, { ref: ref }),
        React__default.createElement("span", { className: "visually-hidden" }, visuallyHiddenLabel)));
});
CSpinner.propTypes = {
    className: propTypesExports.string,
    color: colorPropType,
    component: propTypesExports.string,
    size: propTypesExports.oneOf(['sm']),
    variant: propTypesExports.oneOf(['border', 'grow']),
    visuallyHiddenLabel: propTypesExports.string,
};
CSpinner.displayName = 'CSpinner';

export { CSpinner };
//# sourceMappingURL=CSpinner.js.map
