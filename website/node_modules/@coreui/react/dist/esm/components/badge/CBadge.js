import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { colorPropType, shapePropType, textColorsPropType } from '../Types.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CBadge = forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, className = _a.className, color = _a.color, _c = _a.component, Component = _c === void 0 ? 'span' : _c, position = _a.position, shape = _a.shape, size = _a.size, textColor = _a.textColor, rest = __rest(_a, ["children", "className", "color", "component", "position", "shape", "size", "textColor"]);
    var _className = classNames('badge', (_b = {},
        _b["bg-".concat(color)] = color,
        _b['position-absolute translate-middle'] = position,
        _b['top-0'] = position === null || position === void 0 ? void 0 : position.includes('top'),
        _b['top-100'] = position === null || position === void 0 ? void 0 : position.includes('bottom'),
        _b['start-100'] = position === null || position === void 0 ? void 0 : position.includes('end'),
        _b['start-0'] = position === null || position === void 0 ? void 0 : position.includes('start'),
        _b["badge-".concat(size)] = size,
        _b["text-".concat(textColor)] = textColor,
        _b), shape, className);
    return (React__default.createElement(Component, __assign({ className: _className }, rest, { ref: ref }), children));
});
CBadge.propTypes = {
    children: propTypesExports.node,
    className: propTypesExports.string,
    color: colorPropType,
    component: propTypesExports.string,
    position: propTypesExports.oneOf(['top-start', 'top-end', 'bottom-end', 'bottom-start']),
    shape: shapePropType,
    size: propTypesExports.oneOf(['sm']),
    textColor: textColorsPropType,
};
CBadge.displayName = 'CBadge';

export { CBadge };
//# sourceMappingURL=CBadge.js.map
