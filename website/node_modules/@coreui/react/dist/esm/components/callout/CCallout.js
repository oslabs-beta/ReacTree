import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { colorPropType } from '../Types.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CCallout = forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, className = _a.className, color = _a.color, rest = __rest(_a, ["children", "className", "color"]);
    var _className = classNames('callout', (_b = {},
        _b["callout-".concat(color)] = color,
        _b), className);
    return (React__default.createElement("div", __assign({ className: _className }, rest, { ref: ref }), children));
});
CCallout.propTypes = {
    children: propTypesExports.node,
    className: propTypesExports.string,
    color: colorPropType,
};
CCallout.displayName = 'CCallout';

export { CCallout };
//# sourceMappingURL=CCallout.js.map
