import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { colorPropType } from '../Types.js';
import { CLink } from '../link/CLink.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CButton = forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, className = _a.className, _c = _a.color, color = _c === void 0 ? 'primary' : _c, _d = _a.component, component = _d === void 0 ? 'button' : _d, shape = _a.shape, size = _a.size, _e = _a.type, type = _e === void 0 ? 'button' : _e, variant = _a.variant, rest = __rest(_a, ["children", "className", "color", "component", "shape", "size", "type", "variant"]);
    var _className = classNames('btn', variant ? "btn-".concat(variant, "-").concat(color) : "btn-".concat(color), (_b = {}, _b["btn-".concat(size)] = size, _b), shape, className);
    return (React__default.createElement(CLink, __assign({ component: rest.href ? 'a' : component, type: type, className: _className }, rest, { ref: ref }), children));
});
CButton.propTypes = {
    children: propTypesExports.node,
    className: propTypesExports.string,
    color: colorPropType,
    component: propTypesExports.elementType,
    shape: propTypesExports.string,
    size: propTypesExports.oneOf(['sm', 'lg']),
    type: propTypesExports.oneOf(['button', 'submit', 'reset']),
    variant: propTypesExports.oneOf(['outline', 'ghost']),
};
CButton.displayName = 'CButton';

export { CButton };
//# sourceMappingURL=CButton.js.map
