import { __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default from 'react';
import '../../node_modules/prop-types/index.js';
import { CFormControlValidation } from './CFormControlValidation.js';
import { CFormFloating } from './CFormFloating.js';
import { CFormLabel } from './CFormLabel.js';
import { CFormText } from './CFormText.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CFormControlWrapper = function (_a) {
    var children = _a.children, describedby = _a.describedby, feedback = _a.feedback, feedbackInvalid = _a.feedbackInvalid, feedbackValid = _a.feedbackValid, floatingClassName = _a.floatingClassName, floatingLabel = _a.floatingLabel, id = _a.id, invalid = _a.invalid, label = _a.label, text = _a.text, tooltipFeedback = _a.tooltipFeedback, valid = _a.valid;
    var formControlValidation = function () { return (React__default.createElement(CFormControlValidation, { describedby: describedby, feedback: feedback, feedbackInvalid: feedbackInvalid, feedbackValid: feedbackValid, floatingLabel: floatingLabel, invalid: invalid, tooltipFeedback: tooltipFeedback, valid: valid })); };
    return floatingLabel ? (React__default.createElement(CFormFloating, { className: floatingClassName },
        children,
        React__default.createElement(CFormLabel, { htmlFor: id }, label || floatingLabel),
        text && React__default.createElement(CFormText, { id: describedby }, text),
        formControlValidation())) : (React__default.createElement(React__default.Fragment, null,
        label && React__default.createElement(CFormLabel, { htmlFor: id }, label),
        children,
        text && React__default.createElement(CFormText, { id: describedby }, text),
        formControlValidation()));
};
CFormControlWrapper.propTypes = __assign({ children: propTypesExports.node, floatingClassName: propTypesExports.string, floatingLabel: propTypesExports.oneOfType([propTypesExports.node, propTypesExports.string]), label: propTypesExports.oneOfType([propTypesExports.node, propTypesExports.string]), text: propTypesExports.oneOfType([propTypesExports.node, propTypesExports.string]) }, CFormControlValidation.propTypes);
CFormControlWrapper.displayName = 'CFormControlWrapper';

export { CFormControlWrapper };
//# sourceMappingURL=CFormControlWrapper.js.map
