import { __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default from 'react';
import '../../node_modules/prop-types/index.js';
import { CFormFeedback } from './CFormFeedback.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CFormControlValidation = function (_a) {
    var describedby = _a.describedby, feedback = _a.feedback, feedbackInvalid = _a.feedbackInvalid, feedbackValid = _a.feedbackValid, invalid = _a.invalid, tooltipFeedback = _a.tooltipFeedback, valid = _a.valid;
    return (React__default.createElement(React__default.Fragment, null,
        feedback && (valid || invalid) && (React__default.createElement(CFormFeedback, __assign({}, (invalid && { id: describedby }), { invalid: invalid, tooltip: tooltipFeedback, valid: valid }), feedback)),
        feedbackInvalid && (React__default.createElement(CFormFeedback, { id: describedby, invalid: true, tooltip: tooltipFeedback }, feedbackInvalid)),
        feedbackValid && (React__default.createElement(CFormFeedback, { valid: true, tooltip: tooltipFeedback }, feedbackValid))));
};
CFormControlValidation.propTypes = {
    describedby: propTypesExports.string,
    feedback: propTypesExports.oneOfType([propTypesExports.node, propTypesExports.string]),
    feedbackValid: propTypesExports.oneOfType([propTypesExports.node, propTypesExports.string]),
    feedbackInvalid: propTypesExports.oneOfType([propTypesExports.node, propTypesExports.string]),
    invalid: propTypesExports.bool,
    tooltipFeedback: propTypesExports.bool,
    valid: propTypesExports.bool,
};
CFormControlValidation.displayName = 'CFormControlValidation';

export { CFormControlValidation };
//# sourceMappingURL=CFormControlValidation.js.map
