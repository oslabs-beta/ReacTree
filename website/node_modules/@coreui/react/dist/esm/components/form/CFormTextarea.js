import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import classNames from '../../node_modules/classnames/index.js';
import '../../node_modules/prop-types/index.js';
import { CFormControlWrapper } from './CFormControlWrapper.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CFormTextarea = forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, feedback = _a.feedback, feedbackInvalid = _a.feedbackInvalid, feedbackValid = _a.feedbackValid, floatingClassName = _a.floatingClassName, floatingLabel = _a.floatingLabel, id = _a.id, invalid = _a.invalid, label = _a.label, plainText = _a.plainText, text = _a.text, tooltipFeedback = _a.tooltipFeedback, valid = _a.valid, rest = __rest(_a, ["children", "className", "feedback", "feedbackInvalid", "feedbackValid", "floatingClassName", "floatingLabel", "id", "invalid", "label", "plainText", "text", "tooltipFeedback", "valid"]);
    var _className = classNames(plainText ? 'form-control-plaintext' : 'form-control', {
        'is-invalid': invalid,
        'is-valid': valid,
    }, className);
    return (React__default.createElement(CFormControlWrapper, { describedby: rest['aria-describedby'], feedback: feedback, feedbackInvalid: feedbackInvalid, feedbackValid: feedbackValid, floatingClassName: floatingClassName, floatingLabel: floatingLabel, id: id, invalid: invalid, label: label, text: text, tooltipFeedback: tooltipFeedback, valid: valid },
        React__default.createElement("textarea", __assign({ className: _className, id: id }, rest, { ref: ref }), children)));
});
CFormTextarea.propTypes = __assign({ className: propTypesExports.string, id: propTypesExports.string, plainText: propTypesExports.bool }, CFormControlWrapper.propTypes);
CFormTextarea.displayName = 'CFormTextarea';

export { CFormTextarea };
//# sourceMappingURL=CFormTextarea.js.map
