import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { CFormLabel } from './CFormLabel.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CFormSwitch = forwardRef(function (_a, ref) {
    var _b;
    var className = _a.className, id = _a.id, invalid = _a.invalid, label = _a.label, size = _a.size, _c = _a.type, type = _c === void 0 ? 'checkbox' : _c, valid = _a.valid, rest = __rest(_a, ["className", "id", "invalid", "label", "size", "type", "valid"]);
    var _className = classNames('form-check form-switch', (_b = {},
        _b["form-switch-".concat(size)] = size,
        _b['is-invalid'] = invalid,
        _b['is-valid'] = valid,
        _b), className);
    var inputClassName = classNames('form-check-input', {
        'is-invalid': invalid,
        'is-valid': valid,
    });
    var labelClassName = classNames('form-check-label');
    return (React__default.createElement("div", { className: _className },
        React__default.createElement("input", __assign({ type: type, className: inputClassName, id: id }, rest, { ref: ref })),
        label && (React__default.createElement(CFormLabel, __assign({ customClassName: labelClassName }, (id && { htmlFor: id })), label))));
});
CFormSwitch.propTypes = {
    className: propTypesExports.string,
    id: propTypesExports.string,
    invalid: propTypesExports.bool,
    label: propTypesExports.oneOfType([propTypesExports.string, propTypesExports.node]),
    size: propTypesExports.oneOf(['lg', 'xl']),
    type: propTypesExports.oneOf(['checkbox', 'radio']),
    valid: propTypesExports.bool,
};
CFormSwitch.displayName = 'CFormSwitch';

export { CFormSwitch };
//# sourceMappingURL=CFormSwitch.js.map
