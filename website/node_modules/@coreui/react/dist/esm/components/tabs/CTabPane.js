import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef, useRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import '../../node_modules/react-transition-group/esm/CSSTransition.js';
import '../../node_modules/react-transition-group/esm/ReplaceTransition.js';
import '../../node_modules/react-transition-group/esm/SwitchTransition.js';
import '../../node_modules/react-transition-group/esm/TransitionGroup.js';
import Transition from '../../node_modules/react-transition-group/esm/Transition.js';
import { useForkedRef } from '../../utils/hooks/useForkedRef.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CTabPane = forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, onHide = _a.onHide, onShow = _a.onShow, visible = _a.visible, rest = __rest(_a, ["children", "className", "onHide", "onShow", "visible"]);
    var tabPaneRef = useRef();
    var forkedRef = useForkedRef(ref, tabPaneRef);
    var getTransitionClass = function (state) {
        return state === 'entered' && 'show';
    };
    var _className = classNames('tab-pane', 'fade', {
        active: visible,
    }, className);
    return (React__default.createElement(Transition, { in: visible, nodeRef: tabPaneRef, onEnter: onShow, onExit: onHide, timeout: 150 }, function (state) {
        var transitionClass = getTransitionClass(state);
        return (React__default.createElement("div", __assign({ className: classNames(_className, transitionClass) }, rest, { ref: forkedRef }), children));
    }));
});
CTabPane.propTypes = {
    children: propTypesExports.node,
    className: propTypesExports.string,
    onHide: propTypesExports.func,
    onShow: propTypesExports.func,
    visible: propTypesExports.bool,
};
CTabPane.displayName = 'CTabPane';

export { CTabPane };
//# sourceMappingURL=CTabPane.js.map
