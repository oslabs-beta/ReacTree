import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CModalDialog = forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, alignment = _a.alignment, className = _a.className, fullscreen = _a.fullscreen, scrollable = _a.scrollable, size = _a.size, rest = __rest(_a, ["children", "alignment", "className", "fullscreen", "scrollable", "size"]);
    var _className = classNames('modal-dialog', (_b = {
            'modal-dialog-centered': alignment === 'center'
        },
        _b[typeof fullscreen === 'boolean'
            ? 'modal-fullscreen'
            : "modal-fullscreen-".concat(fullscreen, "-down")] = fullscreen,
        _b['modal-dialog-scrollable'] = scrollable,
        _b["modal-".concat(size)] = size,
        _b), className);
    return (React__default.createElement("div", __assign({ className: _className }, rest, { ref: ref }), children));
});
CModalDialog.propTypes = {
    alignment: propTypesExports.oneOf(['top', 'center']),
    children: propTypesExports.node,
    className: propTypesExports.string,
    fullscreen: propTypesExports.oneOfType([
        propTypesExports.bool,
        propTypesExports.oneOf(['sm', 'md', 'lg', 'xl', 'xxl']),
    ]),
    scrollable: propTypesExports.bool,
    size: propTypesExports.oneOf(['sm', 'lg', 'xl']),
};
CModalDialog.displayName = 'CModalDialog';

export { CModalDialog };
//# sourceMappingURL=CModalDialog.js.map
