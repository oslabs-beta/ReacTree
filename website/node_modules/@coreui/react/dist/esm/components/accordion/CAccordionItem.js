import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { createContext, forwardRef, useRef, useContext, useState, useEffect } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { CAccordionContext } from './CAccordion.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CAccordionItemContext = createContext({});
var CAccordionItem = forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, itemKey = _a.itemKey, rest = __rest(_a, ["children", "className", "itemKey"]);
    var _itemKey = useRef(itemKey ? itemKey : Math.random().toString(36).substr(2, 9));
    var _b = useContext(CAccordionContext), _activeItemKey = _b._activeItemKey, alwaysOpen = _b.alwaysOpen, setActiveKey = _b.setActiveKey;
    var _c = useState(Boolean(_activeItemKey === _itemKey.current)), visible = _c[0], setVisible = _c[1];
    useEffect(function () {
        !alwaysOpen && visible && setActiveKey(_itemKey.current);
    }, [visible]);
    useEffect(function () {
        setVisible(Boolean(_activeItemKey === _itemKey.current));
    }, [_activeItemKey]);
    var _className = classNames('accordion-item', className);
    return (React__default.createElement("div", __assign({ className: _className }, rest, { ref: ref }),
        React__default.createElement(CAccordionItemContext.Provider, { value: { setVisible: setVisible, visible: visible } }, children)));
});
CAccordionItem.propTypes = {
    children: propTypesExports.node,
    className: propTypesExports.string,
    itemKey: propTypesExports.oneOfType([propTypesExports.number, propTypesExports.string]),
};
CAccordionItem.displayName = 'CAccordionItem';

export { CAccordionItem, CAccordionItemContext };
//# sourceMappingURL=CAccordionItem.js.map
