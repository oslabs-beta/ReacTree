import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef, useContext } from 'react';
import '../../node_modules/prop-types/index.js';
import { CToastContext } from './CToast.js';
import { CCloseButton } from '../close-button/CCloseButton.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CToastClose = forwardRef(function (_a, ref) {
    var children = _a.children, Component = _a.component, rest = __rest(_a, ["children", "component"]);
    var setVisible = useContext(CToastContext).setVisible;
    return Component ? (React__default.createElement(Component, __assign({ onClick: function () { return setVisible(false); } }, rest, { ref: ref }), children)) : (React__default.createElement(CCloseButton, __assign({ onClick: function () { return setVisible(false); } }, rest, { ref: ref })));
});
CToastClose.propTypes = __assign(__assign({}, CCloseButton.propTypes), { component: propTypesExports.elementType });
CToastClose.displayName = 'CToastClose';

export { CToastClose };
//# sourceMappingURL=CToastClose.js.map
