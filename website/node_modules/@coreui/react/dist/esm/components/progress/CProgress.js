import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { CProgressBar } from './CProgressBar.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CProgress = forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, height = _a.height, thin = _a.thin, _b = _a.value, value = _b === void 0 ? 0 : _b, white = _a.white, rest = __rest(_a, ["children", "className", "height", "thin", "value", "white"]);
    var _className = classNames('progress', {
        'progress-thin': thin,
        'progress-white': white,
    }, className);
    return (React__default.createElement("div", { className: _className, style: height ? { height: "".concat(height, "px") } : {}, ref: ref }, value ? (React__default.createElement(CProgressBar, __assign({ value: value }, rest), children)) : (children)));
});
CProgress.propTypes = {
    children: propTypesExports.node,
    className: propTypesExports.string,
    height: propTypesExports.number,
    thin: propTypesExports.bool,
    value: propTypesExports.number,
    white: propTypesExports.bool,
};
CProgress.displayName = 'CProgress';

export { CProgress };
//# sourceMappingURL=CProgress.js.map
