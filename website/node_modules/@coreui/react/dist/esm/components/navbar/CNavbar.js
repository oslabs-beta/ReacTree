import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { colorPropType } from '../Types.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CNavbar = forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, className = _a.className, color = _a.color, colorScheme = _a.colorScheme, _c = _a.component, Component = _c === void 0 ? 'nav' : _c, container = _a.container, expand = _a.expand, placement = _a.placement, rest = __rest(_a, ["children", "className", "color", "colorScheme", "component", "container", "expand", "placement"]);
    var _className = classNames('navbar', (_b = {},
        _b["bg-".concat(color)] = color,
        _b["navbar-".concat(colorScheme)] = colorScheme,
        _b[typeof expand === 'boolean' ? 'navbar-expand' : "navbar-expand-".concat(expand)] = expand,
        _b), placement, className);
    var content;
    if (container) {
        content = (React__default.createElement("div", { className: "container".concat(container !== true ? '-' + container : '') }, children));
    }
    else {
        content = children;
    }
    return (React__default.createElement(Component, __assign({ className: _className }, rest, { ref: ref }), content));
});
CNavbar.propTypes = {
    children: propTypesExports.node,
    className: propTypesExports.string,
    color: colorPropType,
    colorScheme: propTypesExports.oneOf(['dark', 'light']),
    component: propTypesExports.elementType,
    container: propTypesExports.oneOfType([
        propTypesExports.bool,
        propTypesExports.oneOf([
            'sm',
            'md',
            'lg',
            'xl',
            'xxl',
            'fluid',
        ]),
    ]),
    expand: propTypesExports.oneOfType([
        propTypesExports.bool,
        propTypesExports.oneOf(['sm', 'md', 'lg', 'xl', 'xxl']),
    ]),
    placement: propTypesExports.oneOf(['fixed-top', 'fixed-bottom', 'sticky-top']),
};
CNavbar.displayName = 'CNavbar';

export { CNavbar };
//# sourceMappingURL=CNavbar.js.map
