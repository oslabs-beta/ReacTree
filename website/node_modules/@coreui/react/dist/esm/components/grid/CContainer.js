import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { forwardRef } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var BREAKPOINTS = [
    'xxl',
    'xl',
    'lg',
    'md',
    'sm',
    'fluid',
];
var CContainer = forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, rest = __rest(_a, ["children", "className"]);
    var repsonsiveClassNames = [];
    BREAKPOINTS.forEach(function (bp) {
        var breakpoint = rest[bp];
        delete rest[bp];
        breakpoint && repsonsiveClassNames.push("container-".concat(bp));
    });
    var _className = classNames(repsonsiveClassNames.length ? repsonsiveClassNames : 'container', className);
    return (React__default.createElement("div", __assign({ className: _className }, rest, { ref: ref }), children));
});
CContainer.propTypes = {
    children: propTypesExports.node,
    className: propTypesExports.string,
    sm: propTypesExports.bool,
    md: propTypesExports.bool,
    lg: propTypesExports.bool,
    xl: propTypesExports.bool,
    xxl: propTypesExports.bool,
    fluid: propTypesExports.bool,
};
CContainer.displayName = 'CContainer';

export { CContainer };
//# sourceMappingURL=CContainer.js.map
