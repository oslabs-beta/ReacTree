import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React__default, { createContext, forwardRef, useState } from 'react';
import '../../node_modules/prop-types/index.js';
import classNames from '../../node_modules/classnames/index.js';
import { exports as propTypesExports } from '../../_virtual/index.js';

var CNavContext = createContext({});
var CSidebarNav = forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, rest = __rest(_a, ["children", "className"]);
    var _b = useState(''), visibleGroup = _b[0], setVisibleGroup = _b[1];
    var CNavContextValues = {
        visibleGroup: visibleGroup,
        setVisibleGroup: setVisibleGroup,
    };
    var classes = classNames('sidebar-nav', className);
    return (React__default.createElement("ul", __assign({ className: classes, ref: ref }, rest),
        React__default.createElement(CNavContext.Provider, { value: CNavContextValues }, React__default.Children.map(children, function (child, index) {
            if (React__default.isValidElement(child)) {
                return React__default.cloneElement(child, {
                    key: index,
                    idx: "".concat(index),
                });
            }
            return;
        }))));
});
CSidebarNav.propTypes = {
    children: propTypesExports.node,
    className: propTypesExports.string,
};
CSidebarNav.displayName = 'CSidebarNav';

export { CNavContext, CSidebarNav };
//# sourceMappingURL=CSidebarNav.js.map
